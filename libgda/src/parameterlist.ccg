/* $Id: parameterlist.ccg,v 1.7 2006/11/06 04:38:05 murrayc Exp $ */
// -*- C++ -*- //

/* parameter.cc
 * 
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <libgda/gda-parameter-list.h>
#include <libgda/gda-parameter.h>
#include <libgda/gda-enum-types.h>
#include <libgda/gda-dict.h>

namespace Gnome
{

namespace Gda
{

ParameterList::ParameterList(const Glib::RefPtr<Dict>& dict, const Glib::SListHandle<Parameter>& params) :
  _CONSTRUCT("dict", dict->gobj(), "params", params.data(), NULL)
{

}

Glib::RefPtr<ParameterList> ParameterList::create(const Glib::SListHandle<Parameter>& params)
{
	Glib::RefPtr<Dict> dict(Glib::wrap(_gda_parameter_list_get_dict(params.data())));
	return Glib::RefPtr<ParameterList>(new ParameterList(dict, params));
}

Glib::RefPtr<ParameterList> ParameterList::create()
{
  return Glib::RefPtr<ParameterList>(Glib::wrap(gda_parameter_list_new(NULL)));
}

Value ParameterList::get_param_default_value(const Glib::RefPtr<const Parameter>& param) const
{
  Value value;
  const GValue* cvalue = gda_parameter_list_get_param_default_value(const_cast<GdaParameterList*>(gobj()), const_cast<GdaParameter*>(param->gobj()));
  if(cvalue)
    value.init(cvalue);
  
  return value;
}

} //namespace Gda

} // namespace Gnome


