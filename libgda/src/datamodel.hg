/* $Id$ */
// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* datamodel.h
 *
 * Copyright 2001      Free Software Foundation
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <libgda/gda-data-model.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gnome
{

namespace Gda
{

class DataModel : public Glib::Object
{
  _CLASS_GOBJECT(DataModel, GdaDataModel, GDA_DATA_MODEL, Glib::Object, GObject)
public:

  _WRAP_METHOD(void changed(), gda_data_model_changed)
  _WRAP_METHOD(void freeze(), gda_data_model_freeze)
  _WRAP_METHOD(void thaw(), gda_data_model_thaw)

  _WRAP_METHOD(int get_n_rows(), gda_data_model_get_n_rows)
  _WRAP_METHOD(int get_n_columns(), gda_data_model_get_n_columns)
  _WRAP_METHOD(GdaFieldAttributes* describe_column(int col), gda_data_model_describe_column)
  _WRAP_METHOD(Glib::ustring get_column_title(int col), gda_data_model_get_column_title)
  _WRAP_METHOD(void set_column_title(int col, const Glib::ustring& title), gda_data_model_set_column_title)
  _WRAP_METHOD(const GdaValue* get_value_at(int col, int row), gda_data_model_get_value_at)

  _WRAP_METHOD(Glib::ustring to_comma_separated(), gda_data_model_to_comma_separated)
  _WRAP_METHOD(Glib::ustring to_tab_separated(), gda_data_model_to_tab_separated)
  _WRAP_METHOD(Glib::ustring to_xml(bool standalone), gda_data_model_to_xml)

  _WRAP_SIGNAL(void changed(), "changed")

  _WRAP_VFUNC(int get_n_rows_vfunc(), get_n_rows)
  _WRAP_VFUNC(int get_n_columns_vfunc(), get_n_columns)
  _WRAP_VFUNC(GdaFieldAttributes* describe_column_vfunc(int col), describe_column)
  _WRAP_VFUNC(const GdaValue* get_value_at_vfunc(int col, int row), get_value_at)
};

} // namespace Gda
} // namespace Gnome

