/* $Id$ */
// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* row.h
 *
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */


#include <libgdamm/value.h>
//#include <glibmm/object.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

#include <libgda/gda-data-model.h>

namespace Gnome
{

namespace Gda
{

class DataModel;
class Value;

class Row
{
  _CLASS_OPAQUE_COPYABLE(Row, GdaRow, NONE, gda_row_copy, gda_row_free)
  _IGNORE(gda_row_copy, gda_row_free)
public:

  Row(const Glib::RefPtr<DataModel>& model, int count);
  _IGNORE(gda_row_new)
  Row(const Glib::RefPtr<DataModel>& model, const GList *values);
  _IGNORE(gda_row_new_from_list)

  _WRAP_METHOD(Glib::RefPtr<DataModel> get_model(), gda_row_get_model)
  _WRAP_METHOD(Glib::RefPtr<const DataModel> get_model() const, gda_row_get_model)

  _WRAP_METHOD(int get_number () const, gda_row_get_number)
  _WRAP_METHOD(void set_number(int number), gda_row_set_number)
  _WRAP_METHOD(Glib::ustring get_id() const, gda_row_get_id)
  _WRAP_METHOD(void set_id(const Glib::ustring& id), gda_row_set_id)
  _WRAP_METHOD(Value get_value(int num) const, gda_row_get_value)
  _WRAP_METHOD(int get_length() const, gda_row_get_length)

};

} // namespace Gda
} // namespace Gnome

