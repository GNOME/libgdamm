/* $Id$ */
// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* error.h
 *
 * Copyright 2001      Free Software Foundation
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <libgda/gda-error.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gnome
{

namespace Gda
{

class Error : public Glib::Object
{
  _CLASS_GOBJECT(Error, GdaError, GDA_ERROR, Glib::Object, GObject)
protected:

 _CTOR_DEFAULT

public:
  _WRAP_CREATE()

  //_WRAP_METHOD(GList* gda_error_list_from_exception (CORBA_Environment * ev);
  //_WRAP_METHOD(void gda_error_to_exception (CORBA_Environment * ev);
  //_WRAP_METHOD(void gda_error_list_to_exception(GList * error_list, CORBA_Environment * ev), gda_error_list_to_exception)
  //_WRAP_METHOD(GNOME_Database_ErrorSeq* list_to_corba_seq (GList * error_list), gda_error_list_to_corba_seq)

  _WRAP_METHOD(Glib::ustring get_description(), gda_error_get_description)
  _WRAP_METHOD(void set_description(const Glib::ustring& description), gda_error_set_description)
  _WRAP_METHOD(const glong get_number(), gda_error_get_number)
  _WRAP_METHOD(void set_number(glong number), gda_error_set_number)
  _WRAP_METHOD(Glib::ustring get_source(), gda_error_get_source)
  _WRAP_METHOD(void set_source(const Glib::ustring& source), gda_error_set_source)
  _WRAP_METHOD(Glib::ustring get_sqlstate(), gda_error_get_sqlstate)
  _WRAP_METHOD(void set_sqlstate(const Glib::ustring& sqlstate), gda_error_set_sqlstate)

};

} // namespace Gda
} // namespace Gnome

