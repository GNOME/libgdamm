/* $Id$ */
// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* transaction.h
 * 
 * Copyright 2001      Free Software Foundation
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <libgda/gda-transaction.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

namespace Gnome
{
  
namespace Gda
{

_WRAP_ENUM(TransactionIsolation, GdaTransactionIsolation)

class Transaction : public Glib::Object
{
  _CLASS_GOBJECT(Transaction, GdaTransaction, GDA_TRANSACTION, Glib::Object, GObject)
protected:
  _WRAP_CTOR(Transaction(const Glib::ustring& name), gda_transaction_new)

public:
  _WRAP_CREATE(const Glib::ustring& name)

  _WRAP_METHOD(TransactionIsolation get_isolation_level() const, gda_transaction_get_isolation_level)
  _WRAP_METHOD(void set_isolation_level(GdaTransactionIsolation level), gda_transaction_set_isolation_level)
                   
  _WRAP_METHOD(Glib::ustring get_name() const, gda_transaction_get_name)
  _WRAP_METHOD(void set_name(const Glib::ustring& name), gda_transaction_set_name)
};

} // namespace Gda
} // namespace Gnome

