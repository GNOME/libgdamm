;; From /usr/include/libgda-4.0/libgda/gda-binreloc.h

(define-enum-extended PrefixDir
  (in-module "Gda")
  (c-name "GdaPrefixDir")
  (values
    '("no-dir" "GDA_NO_DIR" "0")
    '("bin-dir" "GDA_BIN_DIR" "1")
    '("sbin-dir" "GDA_SBIN_DIR" "2")
    '("data-dir" "GDA_DATA_DIR" "3")
    '("locale-dir" "GDA_LOCALE_DIR" "4")
    '("lib-dir" "GDA_LIB_DIR" "5")
    '("libexec-dir" "GDA_LIBEXEC_DIR" "6")
    '("etc-dir" "GDA_ETC_DIR" "7")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-config.h

(define-enum-extended ConfigError
  (in-module "Gda")
  (c-name "GdaConfigError")
  (values
    '("dsn-not-found-error" "GDA_CONFIG_DSN_NOT_FOUND_ERROR" "0")
    '("permission-error" "GDA_CONFIG_PERMISSION_ERROR" "1")
    '("provider-not-found-error" "GDA_CONFIG_PROVIDER_NOT_FOUND_ERROR" "2")
    '("provider-creation-error" "GDA_CONFIG_PROVIDER_CREATION_ERROR" "3")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-connection-event.h

(define-enum-extended ConnectionEventType
  (in-module "Gda")
  (c-name "GdaConnectionEventType")
  (values
    '("notice" "GDA_CONNECTION_EVENT_NOTICE" "0")
    '("warning" "GDA_CONNECTION_EVENT_WARNING" "1")
    '("error" "GDA_CONNECTION_EVENT_ERROR" "2")
    '("command" "GDA_CONNECTION_EVENT_COMMAND" "3")
  )
)

(define-enum-extended ConnectionEventCode
  (in-module "Gda")
  (c-name "GdaConnectionEventCode")
  (values
    '("constraint-violation" "GDA_CONNECTION_EVENT_CODE_CONSTRAINT_VIOLATION" "0")
    '("restrict-violation" "GDA_CONNECTION_EVENT_CODE_RESTRICT_VIOLATION" "1")
    '("not-null-violation" "GDA_CONNECTION_EVENT_CODE_NOT_NULL_VIOLATION" "2")
    '("foreign-key-violation" "GDA_CONNECTION_EVENT_CODE_FOREIGN_KEY_VIOLATION" "3")
    '("unique-violation" "GDA_CONNECTION_EVENT_CODE_UNIQUE_VIOLATION" "4")
    '("check-violation" "GDA_CONNECTION_EVENT_CODE_CHECK_VIOLATION" "5")
    '("insufficient-privileges" "GDA_CONNECTION_EVENT_CODE_INSUFFICIENT_PRIVILEGES" "6")
    '("undefined-column" "GDA_CONNECTION_EVENT_CODE_UNDEFINED_COLUMN" "7")
    '("undefined-function" "GDA_CONNECTION_EVENT_CODE_UNDEFINED_FUNCTION" "8")
    '("undefined-table" "GDA_CONNECTION_EVENT_CODE_UNDEFINED_TABLE" "9")
    '("duplicate-column" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_COLUMN" "10")
    '("duplicate-database" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_DATABASE" "11")
    '("duplicate-function" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_FUNCTION" "12")
    '("duplicate-schema" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_SCHEMA" "13")
    '("duplicate-table" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_TABLE" "14")
    '("duplicate-alias" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_ALIAS" "15")
    '("duplicate-object" "GDA_CONNECTION_EVENT_CODE_DUPLICATE_OBJECT" "16")
    '("syntax-error" "GDA_CONNECTION_EVENT_CODE_SYNTAX_ERROR" "17")
    '("unknown" "GDA_CONNECTION_EVENT_CODE_UNKNOWN" "18")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-connection.h

(define-enum-extended ConnectionError
  (in-module "Gda")
  (c-name "GdaConnectionError")
  (values
    '("dsn-not-found-error" "GDA_CONNECTION_DSN_NOT_FOUND_ERROR" "0")
    '("provider-not-found-error" "GDA_CONNECTION_PROVIDER_NOT_FOUND_ERROR" "1")
    '("provider-error" "GDA_CONNECTION_PROVIDER_ERROR" "2")
    '("conn-open-error" "GDA_CONNECTION_CONN_OPEN_ERROR" "3")
    '("do-query-error" "GDA_CONNECTION_DO_QUERY_ERROR" "4")
    '("nonexist-dsn-error" "GDA_CONNECTION_NONEXIST_DSN_ERROR" "5")
    '("no-cnc-spec-error" "GDA_CONNECTION_NO_CNC_SPEC_ERROR" "6")
    '("no-provider-spec-error" "GDA_CONNECTION_NO_PROVIDER_SPEC_ERROR" "7")
    '("open-error" "GDA_CONNECTION_OPEN_ERROR" "8")
    '("execute-command-error" "GDA_CONNECTION_EXECUTE_COMMAND_ERROR" "9")
    '("statement-type-error" "GDA_CONNECTION_STATEMENT_TYPE_ERROR" "10")
  )
)

(define-flags-extended ConnectionOptions
  (in-module "Gda")
  (c-name "GdaConnectionOptions")
  (values
    '("none" "GDA_CONNECTION_OPTIONS_NONE" "0")
    '("read-only" "GDA_CONNECTION_OPTIONS_READ_ONLY" "1 << 0")
  )
)

(define-enum-extended ConnectionFeature
  (in-module "Gda")
  (c-name "GdaConnectionFeature")
  (values
    '("aggregates" "GDA_CONNECTION_FEATURE_AGGREGATES" "0")
    '("blobs" "GDA_CONNECTION_FEATURE_BLOBS" "1")
    '("indexes" "GDA_CONNECTION_FEATURE_INDEXES" "2")
    '("inheritance" "GDA_CONNECTION_FEATURE_INHERITANCE" "3")
    '("namespaces" "GDA_CONNECTION_FEATURE_NAMESPACES" "4")
    '("procedures" "GDA_CONNECTION_FEATURE_PROCEDURES" "5")
    '("sequences" "GDA_CONNECTION_FEATURE_SEQUENCES" "6")
    '("sql" "GDA_CONNECTION_FEATURE_SQL" "7")
    '("transactions" "GDA_CONNECTION_FEATURE_TRANSACTIONS" "8")
    '("savepoints" "GDA_CONNECTION_FEATURE_SAVEPOINTS" "9")
    '("savepoints-remove" "GDA_CONNECTION_FEATURE_SAVEPOINTS_REMOVE" "10")
    '("triggers" "GDA_CONNECTION_FEATURE_TRIGGERS" "11")
    '("updatable-cursor" "GDA_CONNECTION_FEATURE_UPDATABLE_CURSOR" "12")
    '("users" "GDA_CONNECTION_FEATURE_USERS" "13")
    '("views" "GDA_CONNECTION_FEATURE_VIEWS" "14")
    '("xa-transactions" "GDA_CONNECTION_FEATURE_XA_TRANSACTIONS" "15")
    '("last" "GDA_CONNECTION_FEATURE_LAST" "16")
  )
)

(define-enum-extended ConnectionSchema
  (in-module "Gda")
  (c-name "GdaConnectionSchema")
  (values
    '("aggregates" "GDA_CONNECTION_SCHEMA_AGGREGATES" "0")
    '("databases" "GDA_CONNECTION_SCHEMA_DATABASES" "1")
    '("fields" "GDA_CONNECTION_SCHEMA_FIELDS" "2")
    '("indexes" "GDA_CONNECTION_SCHEMA_INDEXES" "3")
    '("languages" "GDA_CONNECTION_SCHEMA_LANGUAGES" "4")
    '("namespaces" "GDA_CONNECTION_SCHEMA_NAMESPACES" "5")
    '("parent-tables" "GDA_CONNECTION_SCHEMA_PARENT_TABLES" "6")
    '("procedures" "GDA_CONNECTION_SCHEMA_PROCEDURES" "7")
    '("sequences" "GDA_CONNECTION_SCHEMA_SEQUENCES" "8")
    '("tables" "GDA_CONNECTION_SCHEMA_TABLES" "9")
    '("triggers" "GDA_CONNECTION_SCHEMA_TRIGGERS" "10")
    '("types" "GDA_CONNECTION_SCHEMA_TYPES" "11")
    '("users" "GDA_CONNECTION_SCHEMA_USERS" "12")
    '("views" "GDA_CONNECTION_SCHEMA_VIEWS" "13")
    '("constraints" "GDA_CONNECTION_SCHEMA_CONSTRAINTS" "14")
    '("table-contents" "GDA_CONNECTION_SCHEMA_TABLE_CONTENTS" "15")
  )
)

(define-enum-extended ConnectionMetaType
  (in-module "Gda")
  (c-name "GdaConnectionMetaType")
  (values
    '("namespaces" "GDA_CONNECTION_META_NAMESPACES" "0")
    '("types" "GDA_CONNECTION_META_TYPES" "1")
    '("tables" "GDA_CONNECTION_META_TABLES" "2")
    '("views" "GDA_CONNECTION_META_VIEWS" "3")
    '("fields" "GDA_CONNECTION_META_FIELDS" "4")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-data-comparator.h

(define-enum-extended DataComparatorError
  (in-module "Gda")
  (c-name "GdaDataComparatorError")
  (values
    '("missing-data-model-error" "GDA_DATA_COMPARATOR_MISSING_DATA_MODEL_ERROR" "0")
    '("column-types-mismatch-error" "GDA_DATA_COMPARATOR_COLUMN_TYPES_MISMATCH_ERROR" "1")
    '("model-access-error" "GDA_DATA_COMPARATOR_MODEL_ACCESS_ERROR" "2")
    '("user-cancelled-error" "GDA_DATA_COMPARATOR_USER_CANCELLED_ERROR" "3")
  )
)

(define-enum-extended DiffType
  (in-module "Gda")
  (c-name "GdaDiffType")
  (values
    '("add-row" "GDA_DIFF_ADD_ROW" "0")
    '("remove-row" "GDA_DIFF_REMOVE_ROW" "1")
    '("modify-row" "GDA_DIFF_MODIFY_ROW" "2")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-data-model.h

(define-flags-extended DataModelAccessFlags
  (in-module "Gda")
  (c-name "GdaDataModelAccessFlags")
  (values
    '("random" "GDA_DATA_MODEL_ACCESS_RANDOM" "1 << 0")
    '("cursor-forward" "GDA_DATA_MODEL_ACCESS_CURSOR_FORWARD" "1 << 1")
    '("cursor-backward" "GDA_DATA_MODEL_ACCESS_CURSOR_BACKWARD" "1 << 2")
    '("cursor" "GDA_DATA_MODEL_ACCESS_CURSOR" "0x2")
    '("insert" "GDA_DATA_MODEL_ACCESS_INSERT" "1 << 3")
    '("update" "GDA_DATA_MODEL_ACCESS_UPDATE" "1 << 4")
    '("delete" "GDA_DATA_MODEL_ACCESS_DELETE" "1 << 5")
    '("write" "GDA_DATA_MODEL_ACCESS_WRITE" "0x8")
  )
)

(define-enum-extended DataModelHint
  (in-module "Gda")
  (c-name "GdaDataModelHint")
  (values
    '("start-batch-update" "GDA_DATA_MODEL_HINT_START_BATCH_UPDATE" "0")
    '("end-batch-update" "GDA_DATA_MODEL_HINT_END_BATCH_UPDATE" "1")
    '("refresh" "GDA_DATA_MODEL_HINT_REFRESH" "2")
  )
)

(define-enum-extended DataModelIOFormat
  (in-module "Gda")
  (c-name "GdaDataModelIOFormat")
  (values
    '("data-array-xml" "GDA_DATA_MODEL_IO_DATA_ARRAY_XML" "0")
    '("text-separated" "GDA_DATA_MODEL_IO_TEXT_SEPARATED" "1")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-data-model-iter.h

(define-enum-extended DataModelIterError
  (in-module "Gda")
  (c-name "GdaDataModelIterError")
  (values
    '("r" "GDA_DATA_MODEL_ITER_COLUMN_OUT_OF_RANGE_ERROR" "0")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-data-model-query.h

(define-enum-extended DataModelQueryError
  (in-module "Gda")
  (c-name "GdaDataModelQueryError")
  (values
    '("select-statement-error" "GDA_DATA_MODEL_QUERY_SELECT_STATEMENT_ERROR" "0")
    '("connection-error" "GDA_DATA_MODEL_QUERY_CONNECTION_ERROR" "1")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-data-proxy.h

(define-enum-extended DataProxyError
  (in-module "Gda")
  (c-name "GdaDataProxyError")
  (values
    '("commit-error" "GDA_DATA_PROXY_COMMIT_ERROR" "0")
    '("commit-cancelled" "GDA_DATA_PROXY_COMMIT_CANCELLED" "1")
    '("read-only-value" "GDA_DATA_PROXY_READ_ONLY_VALUE" "2")
    '("read-only-row" "GDA_DATA_PROXY_READ_ONLY_ROW" "3")
    '("filter-error" "GDA_DATA_PROXY_FILTER_ERROR" "4")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-easy.h

(define-enum-extended EasyError
  (in-module "Gda")
  (c-name "GdaEasyError")
  (values
    '("object-name-error" "GDA_EASY_OBJECT_NAME_ERROR" "0")
    '("incorrect-value-error" "GDA_EASY_INCORRECT_VALUE_ERROR" "1")
    '("operation-error" "GDA_EASY_OPERATION_ERROR" "2")
  )
)

(define-flags-extended EasyCreateTableFlag
  (in-module "Gda")
  (c-name "GdaEasyCreateTableFlag")
  (values
    '("pkey-flag" "GDA_EASY_CREATE_TABLE_PKEY_FLAG" "1 << 0")
    '("not-null-flag" "GDA_EASY_CREATE_TABLE_NOT_NULL_FLAG" "1 << 1")
    '("unique-flag" "GDA_EASY_CREATE_TABLE_UNIQUE_FLAG" "1 << 2")
    '("autoinc-flag" "GDA_EASY_CREATE_TABLE_AUTOINC_FLAG" "1 << 3")
    '("pkey-autoinc-flag" "GDA_EASY_CREATE_TABLE_PKEY_AUTOINC_FLAG" "0x1")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-enums.h

(define-enum-extended TransactionIsolation
  (in-module "Gda")
  (c-name "GdaTransactionIsolation")
  (values
    '("unknown" "GDA_TRANSACTION_ISOLATION_UNKNOWN" "0")
    '("read-committed" "GDA_TRANSACTION_ISOLATION_READ_COMMITTED" "1")
    '("read-uncommitted" "GDA_TRANSACTION_ISOLATION_READ_UNCOMMITTED" "2")
    '("repeatable-read" "GDA_TRANSACTION_ISOLATION_REPEATABLE_READ" "3")
    '("serializable" "GDA_TRANSACTION_ISOLATION_SERIALIZABLE" "4")
  )
)

(define-flags-extended ValueAttribute
  (in-module "Gda")
  (c-name "GdaValueAttribute")
  (values
    '("none" "GDA_VALUE_ATTR_NONE" "0")
    '("is-null" "GDA_VALUE_ATTR_IS_NULL" "1 << 0")
    '("can-be-null" "GDA_VALUE_ATTR_CAN_BE_NULL" "1 << 1")
    '("is-default" "GDA_VALUE_ATTR_IS_DEFAULT" "1 << 2")
    '("can-be-default" "GDA_VALUE_ATTR_CAN_BE_DEFAULT" "1 << 3")
    '("is-unchanged" "GDA_VALUE_ATTR_IS_UNCHANGED" "1 << 4")
    '("actions-shown" "GDA_VALUE_ATTR_ACTIONS_SHOWN" "1 << 5")
    '("data-non-valid" "GDA_VALUE_ATTR_DATA_NON_VALID" "1 << 6")
    '("has-value-orig" "GDA_VALUE_ATTR_HAS_VALUE_ORIG" "1 << 7")
    '("no-modif" "GDA_VALUE_ATTR_NO_MODIF" "1 << 8")
    '("unused" "GDA_VALUE_ATTR_UNUSED" "1 << 9")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-holder.h

(define-enum-extended HolderError
  (in-module "Gda")
  (c-name "GdaHolderError")
  (values
    '("string-conversion-error" "GDA_HOLDER_STRING_CONVERSION_ERROR" "0")
    '("value-type-error" "GDA_HOLDER_VALUE_TYPE_ERROR" "1")
    '("value-null-error" "GDA_HOLDER_VALUE_NULL_ERROR" "2")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-meta-store.h

(define-enum-extended MetaStoreError
  (in-module "Gda")
  (c-name "GdaMetaStoreError")
  (values
    '("incorrect-schema-error" "GDA_META_STORE_INCORRECT_SCHEMA_ERROR" "0")
    '("unsupported-provider-error" "GDA_META_STORE_UNSUPPORTED_PROVIDER_ERROR" "1")
    '("internal-error" "GDA_META_STORE_INTERNAL_ERROR" "2")
    '("meta-context-error" "GDA_META_STORE_META_CONTEXT_ERROR" "3")
    '("modify-contents-error" "GDA_META_STORE_MODIFY_CONTENTS_ERROR" "4")
    '("extract-sql-error" "GDA_META_STORE_EXTRACT_SQL_ERROR" "5")
    '("attribute-not-found-error" "GDA_META_STORE_ATTRIBUTE_NOT_FOUND_ERROR" "6")
    '("attribute-error" "GDA_META_STORE_ATTRIBUTE_ERROR" "7")
    '("schema-object-not-found-error" "GDA_META_STORE_SCHEMA_OBJECT_NOT_FOUND_ERROR" "8")
    '("schema-object-conflict-error" "GDA_META_STORE_SCHEMA_OBJECT_CONFLICT_ERROR" "9")
    '("schema-object-descr-error" "GDA_META_STORE_SCHEMA_OBJECT_DESCR_ERROR" "10")
    '("transaction-already-started-error" "GDA_META_STORE_TRANSACTION_ALREADY_STARTED_ERROR" "11")
  )
)

(define-enum-extended MetaStoreChangeType
  (in-module "Gda")
  (c-name "GdaMetaStoreChangeType")
  (values
    '("add" "GDA_META_STORE_ADD" "0")
    '("remove" "GDA_META_STORE_REMOVE" "1")
    '("modify" "GDA_META_STORE_MODIFY" "2")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-meta-struct.h

(define-enum-extended MetaStructError
  (in-module "Gda")
  (c-name "GdaMetaStructError")
  (values
    '("unknown-object-error" "GDA_META_STRUCT_UNKNOWN_OBJECT_ERROR" "0")
    '("duplicate-object-error" "GDA_META_STRUCT_DUPLICATE_OBJECT_ERROR" "1")
    '("incoherence-error" "GDA_META_STRUCT_INCOHERENCE_ERROR" "2")
  )
)

(define-enum-extended MetaDbObjectType
  (in-module "Gda")
  (c-name "GdaMetaDbObjectType")
  (values
    '("unknown" "GDA_META_DB_UNKNOWN" "0")
    '("table" "GDA_META_DB_TABLE" "1")
    '("view" "GDA_META_DB_VIEW" "2")
  )
)

(define-flags-extended MetaStructFeature
  (in-module "Gda")
  (c-name "GdaMetaStructFeature")
  (values
    '("none" "GDA_META_STRUCT_FEATURE_NONE" "0")
    '("foreign-keys" "GDA_META_STRUCT_FEATURE_FOREIGN_KEYS" "1 << 0")
    '("view-dependencies" "GDA_META_STRUCT_FEATURE_VIEW_DEPENDENCIES" "1 << 1")
    '("all" "GDA_META_STRUCT_FEATURE_ALL" "0x1")
  )
)

(define-enum-extended MetaSortType
  (in-module "Gda")
  (c-name "GdaMetaSortType")
  (values
    '("alhapetical" "GDA_META_SORT_ALHAPETICAL" "0")
    '("dependencies" "GDA_META_SORT_DEPENDENCIES" "1")
  )
)

(define-flags-extended MetaGraphInfo
  (in-module "Gda")
  (c-name "GdaMetaGraphInfo")
  (values
    '("s" "GDA_META_GRAPH_COLUMNS" "1 << 0")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-server-operation.h

(define-enum-extended ServerOperationType
  (in-module "Gda")
  (c-name "GdaServerOperationType")
  (values
    '("create-db" "GDA_SERVER_OPERATION_CREATE_DB" "0")
    '("drop-db" "GDA_SERVER_OPERATION_DROP_DB" "1")
    '("create-table" "GDA_SERVER_OPERATION_CREATE_TABLE" "2")
    '("drop-table" "GDA_SERVER_OPERATION_DROP_TABLE" "3")
    '("rename-table" "GDA_SERVER_OPERATION_RENAME_TABLE" "4")
    '("add-column" "GDA_SERVER_OPERATION_ADD_COLUMN" "5")
    '("drop-column" "GDA_SERVER_OPERATION_DROP_COLUMN" "6")
    '("create-index" "GDA_SERVER_OPERATION_CREATE_INDEX" "7")
    '("drop-index" "GDA_SERVER_OPERATION_DROP_INDEX" "8")
    '("create-view" "GDA_SERVER_OPERATION_CREATE_VIEW" "9")
    '("drop-view" "GDA_SERVER_OPERATION_DROP_VIEW" "10")
    '("last" "GDA_SERVER_OPERATION_LAST" "11")
  )
)

(define-enum-extended ServerOperationNodeType
  (in-module "Gda")
  (c-name "GdaServerOperationNodeType")
  (values
    '("paramlist" "GDA_SERVER_OPERATION_NODE_PARAMLIST" "0")
    '("data-model" "GDA_SERVER_OPERATION_NODE_DATA_MODEL" "1")
    '("param" "GDA_SERVER_OPERATION_NODE_PARAM" "2")
    '("sequence" "GDA_SERVER_OPERATION_NODE_SEQUENCE" "3")
    '("sequence-item" "GDA_SERVER_OPERATION_NODE_SEQUENCE_ITEM" "4")
    '("data-model-column" "GDA_SERVER_OPERATION_NODE_DATA_MODEL_COLUMN" "5")
    '("unknown" "GDA_SERVER_OPERATION_NODE_UNKNOWN" "6")
  )
)

(define-enum-extended ServerOperationNodeStatus
  (in-module "Gda")
  (c-name "GdaServerOperationNodeStatus")
  (values
    '("optional" "GDA_SERVER_OPERATION_STATUS_OPTIONAL" "0")
    '("required" "GDA_SERVER_OPERATION_STATUS_REQUIRED" "1")
    '("unknown" "GDA_SERVER_OPERATION_STATUS_UNKNOWN" "2")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-server-provider.h

(define-enum-extended ServerProviderError
  (in-module "Gda")
  (c-name "GdaServerProviderError")
  (values
    '("method-non-implemented-error" "GDA_SERVER_PROVIDER_METHOD_NON_IMPLEMENTED_ERROR" "0")
    '("prepare-stmt-error" "GDA_SERVER_PROVIDER_PREPARE_STMT_ERROR" "1")
    '("empty-stmt-error" "GDA_SERVER_PROVIDER_EMPTY_STMT_ERROR" "2")
    '("missing-param-error" "GDA_SERVER_PROVIDER_MISSING_PARAM_ERROR" "3")
    '("statement-exec-error" "GDA_SERVER_PROVIDER_STATEMENT_EXEC_ERROR" "4")
    '("operation-error" "GDA_SERVER_PROVIDER_OPERATION_ERROR" "5")
    '("internal-error" "GDA_SERVER_PROVIDER_INTERNAL_ERROR" "6")
    '("busy-error" "GDA_SERVER_PROVIDER_BUSY_ERROR" "7")
    '("non-supported-error" "GDA_SERVER_PROVIDER_NON_SUPPORTED_ERROR" "8")
    '("server-version-error" "GDA_SERVER_PROVIDER_SERVER_VERSION_ERROR" "9")
    '("data-error" "GDA_SERVER_PROVIDER_DATA_ERROR" "10")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-set.h

(define-enum-extended SetError
  (in-module "Gda")
  (c-name "GdaSetError")
  (values
    '("xml-spec-error" "GDA_SET_XML_SPEC_ERROR" "0")
    '("holder-not-found-error" "GDA_SET_HOLDER_NOT_FOUND_ERROR" "1")
    '("invalid-error" "GDA_SET_INVALID_ERROR" "2")
  )
)

(define-flags-extended SetHint
  (in-module "Gda")
  (c-name "GdaSetHint")
  (values
    '("read-only" "GDA_SET_HOLDER_READ_ONLY" "1 << 0")
    '("hide" "GDA_SET_HOLDER_HIDE" "1 << 1")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-statement.h

(define-enum-extended StatementError
  (in-module "Gda")
  (c-name "GdaStatementError")
  (values
    '("parse-error" "GDA_STATEMENT_PARSE_ERROR" "0")
    '("syntax-error" "GDA_STATEMENT_SYNTAX_ERROR" "1")
    '("no-cnc-error" "GDA_STATEMENT_NO_CNC_ERROR" "2")
    '("cnc-closed-error" "GDA_STATEMENT_CNC_CLOSED_ERROR" "3")
    '("exec-error" "GDA_STATEMENT_EXEC_ERROR" "4")
    '("param-type-error" "GDA_STATEMENT_PARAM_TYPE_ERROR" "5")
    '("param-error" "GDA_STATEMENT_PARAM_ERROR" "6")
  )
)

(define-flags-extended StatementModelUsage
  (in-module "Gda")
  (c-name "GdaStatementModelUsage")
  (values
    '("random-access" "GDA_STATEMENT_MODEL_RANDOM_ACCESS" "1 << 0")
    '("cursor-forward" "GDA_STATEMENT_MODEL_CURSOR_FORWARD" "1 << 1")
    '("cursor-backward" "GDA_STATEMENT_MODEL_CURSOR_BACKWARD" "1 << 2")
    '("cursor" "GDA_STATEMENT_MODEL_CURSOR" "0x2")
    '("allow-noparam" "GDA_STATEMENT_MODEL_ALLOW_NOPARAM" "1 << 3")
  )
)

(define-flags-extended StatementSqlFlag
  (in-module "Gda")
  (c-name "GdaStatementSqlFlag")
  (values
    '("pretty" "GDA_STATEMENT_SQL_PRETTY" "1 << 0")
    '("params-long" "GDA_STATEMENT_SQL_PARAMS_LONG" "1 << 1")
    '("params-short" "GDA_STATEMENT_SQL_PARAMS_SHORT" "1 << 2")
    '("params-as-colon" "GDA_STATEMENT_SQL_PARAMS_AS_COLON" "1 << 3")
    '("params-as-dollar" "GDA_STATEMENT_SQL_PARAMS_AS_DOLLAR" "1 << 4")
    '("params-as-qmark" "GDA_STATEMENT_SQL_PARAMS_AS_QMARK" "1 << 5")
    '("params-as-uqmark" "GDA_STATEMENT_SQL_PARAMS_AS_UQMARK" "1 << 6")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-transaction-status.h

(define-enum-extended TransactionStatusEventType
  (in-module "Gda")
  (c-name "GdaTransactionStatusEventType")
  (values
    '("savepoint" "GDA_TRANSACTION_STATUS_EVENT_SAVEPOINT" "0")
    '("sql" "GDA_TRANSACTION_STATUS_EVENT_SQL" "1")
    '("sub-transaction" "GDA_TRANSACTION_STATUS_EVENT_SUB_TRANSACTION" "2")
  )
)

(define-enum-extended TransactionStatusState
  (in-module "Gda")
  (c-name "GdaTransactionStatusState")
  (values
    '("ok" "GDA_TRANSACTION_STATUS_STATE_OK" "0")
    '("failed" "GDA_TRANSACTION_STATUS_STATE_FAILED" "1")
  )
)

;; From /usr/include/libgda-4.0/libgda/gda-xa-transaction.h

(define-enum-extended XaTransactionError
  (in-module "Gda")
  (c-name "GdaXaTransactionError")
  (values
    '("already-registered-error" "GDA_XA_TRANSACTION_ALREADY_REGISTERED_ERROR" "0")
    '("dtp-not-supported-error" "GDA_XA_TRANSACTION_DTP_NOT_SUPPORTED_ERROR" "1")
  )
)

;; From /usr/include/libgda-4.0/sql-parser/gda-sql-parser.h

(define-enum-extended SqlParserError
  (in-module "Gda")
  (c-name "GdaSqlParserError")
  (values
    '("syntax-error" "GDA_SQL_PARSER_SYNTAX_ERROR" "0")
    '("overflow-error" "GDA_SQL_PARSER_OVERFLOW_ERROR" "1")
    '("empty-sql-error" "GDA_SQL_PARSER_EMPTY_SQL_ERROR" "2")
  )
)

(define-enum-extended SqlParserMode
  (in-module "Gda")
  (c-name "GdaSqlParserMode")
  (values
    '("parse" "GDA_SQL_PARSER_MODE_PARSE" "0")
    '("delimit" "GDA_SQL_PARSER_MODE_DELIMIT" "1")
  )
)

(define-enum-extended SqlParserFlavour
  (in-module "Gda")
  (c-name "GdaSqlParserFlavour")
  (values
    '("standard" "GDA_SQL_PARSER_FLAVOUR_STANDARD" "0")
    '("sqlite" "GDA_SQL_PARSER_FLAVOUR_SQLITE" "1")
    '("mysql" "GDA_SQL_PARSER_FLAVOUR_MYSQL" "2")
    '("oracle" "GDA_SQL_PARSER_FLAVOUR_ORACLE" "3")
    '("postgresql" "GDA_SQL_PARSER_FLAVOUR_POSTGRESQL" "4")
  )
)

;; From /usr/include/libgda-4.0/sql-parser/gda-statement-struct-compound.h

(define-enum-extended SqlStatementCompoundType
  (in-module "Gda")
  (c-name "GdaSqlStatementCompoundType")
  (values
    '("union" "GDA_SQL_STATEMENT_COMPOUND_UNION" "0")
    '("union-all" "GDA_SQL_STATEMENT_COMPOUND_UNION_ALL" "1")
    '("intersect" "GDA_SQL_STATEMENT_COMPOUND_INTERSECT" "2")
    '("intersect-all" "GDA_SQL_STATEMENT_COMPOUND_INTERSECT_ALL" "3")
    '("except" "GDA_SQL_STATEMENT_COMPOUND_EXCEPT" "4")
    '("except-all" "GDA_SQL_STATEMENT_COMPOUND_EXCEPT_ALL" "5")
  )
)

;; From /usr/include/libgda-4.0/sql-parser/gda-statement-struct-decl.h

(define-enum-extended SqlErrorType
  (in-module "Gda")
  (c-name "GdaSqlErrorType")
  (values
    '("structure-contents-error" "GDA_SQL_STRUCTURE_CONTENTS_ERROR" "0")
    '("malformed-identifier-error" "GDA_SQL_MALFORMED_IDENTIFIER_ERROR" "1")
    '("missing-identifier-error" "GDA_SQL_MISSING_IDENTIFIER_ERROR" "2")
    '("validation-error" "GDA_SQL_VALIDATION_ERROR" "3")
  )
)

(define-enum-extended SqlStatementType
  (in-module "Gda")
  (c-name "GdaSqlStatementType")
  (values
    '("select" "GDA_SQL_STATEMENT_SELECT" "0")
    '("insert" "GDA_SQL_STATEMENT_INSERT" "1")
    '("update" "GDA_SQL_STATEMENT_UPDATE" "2")
    '("delete" "GDA_SQL_STATEMENT_DELETE" "3")
    '("compound" "GDA_SQL_STATEMENT_COMPOUND" "4")
    '("begin" "GDA_SQL_STATEMENT_BEGIN" "5")
    '("rollback" "GDA_SQL_STATEMENT_ROLLBACK" "6")
    '("commit" "GDA_SQL_STATEMENT_COMMIT" "7")
    '("savepoint" "GDA_SQL_STATEMENT_SAVEPOINT" "8")
    '("rollback-savepoint" "GDA_SQL_STATEMENT_ROLLBACK_SAVEPOINT" "9")
    '("delete-savepoint" "GDA_SQL_STATEMENT_DELETE_SAVEPOINT" "10")
    '("unknown" "GDA_SQL_STATEMENT_UNKNOWN" "11")
    '("none" "GDA_SQL_STATEMENT_NONE" "12")
  )
)

(define-enum-extended SqlAnyPartType
  (in-module "Gda")
  (c-name "GdaSqlAnyPartType")
  (values
    '("stmt-select" "GDA_SQL_ANY_STMT_SELECT" "#error")
    '("stmt-insert" "GDA_SQL_ANY_STMT_INSERT" "1")
    '("stmt-update" "GDA_SQL_ANY_STMT_UPDATE" "2")
    '("stmt-delete" "GDA_SQL_ANY_STMT_DELETE" "3")
    '("stmt-compound" "GDA_SQL_ANY_STMT_COMPOUND" "4")
    '("stmt-begin" "GDA_SQL_ANY_STMT_BEGIN" "5")
    '("stmt-rollback" "GDA_SQL_ANY_STMT_ROLLBACK" "6")
    '("stmt-commit" "GDA_SQL_ANY_STMT_COMMIT" "7")
    '("stmt-savepoint" "GDA_SQL_ANY_STMT_SAVEPOINT" "8")
    '("stmt-rollback-savepoint" "GDA_SQL_ANY_STMT_ROLLBACK_SAVEPOINT" "9")
    '("stmt-delete-savepoint" "GDA_SQL_ANY_STMT_DELETE_SAVEPOINT" "10")
    '("stmt-unknown" "GDA_SQL_ANY_STMT_UNKNOWN" "11")
    '("expr" "GDA_SQL_ANY_EXPR" "500")
    '("sql-field" "GDA_SQL_ANY_SQL_FIELD" "501")
    '("sql-table" "GDA_SQL_ANY_SQL_TABLE" "502")
    '("sql-function" "GDA_SQL_ANY_SQL_FUNCTION" "503")
    '("sql-operation" "GDA_SQL_ANY_SQL_OPERATION" "504")
    '("sql-case" "GDA_SQL_ANY_SQL_CASE" "505")
    '("sql-select-field" "GDA_SQL_ANY_SQL_SELECT_FIELD" "506")
    '("sql-select-target" "GDA_SQL_ANY_SQL_SELECT_TARGET" "507")
    '("sql-select-join" "GDA_SQL_ANY_SQL_SELECT_JOIN" "508")
    '("sql-select-from" "GDA_SQL_ANY_SQL_SELECT_FROM" "509")
    '("sql-select-order" "GDA_SQL_ANY_SQL_SELECT_ORDER" "510")
  )
)

;; From /usr/include/libgda-4.0/sql-parser/gda-statement-struct-parts.h

(define-enum-extended SqlOperatorType
  (in-module "Gda")
  (c-name "GdaSqlOperatorType")
  (values
    '("and" "GDA_SQL_OPERATOR_TYPE_AND" "0")
    '("or" "GDA_SQL_OPERATOR_TYPE_OR" "1")
    '("eq" "GDA_SQL_OPERATOR_TYPE_EQ" "2")
    '("is" "GDA_SQL_OPERATOR_TYPE_IS" "3")
    '("like" "GDA_SQL_OPERATOR_TYPE_LIKE" "4")
    '("between" "GDA_SQL_OPERATOR_TYPE_BETWEEN" "5")
    '("gt" "GDA_SQL_OPERATOR_TYPE_GT" "6")
    '("lt" "GDA_SQL_OPERATOR_TYPE_LT" "7")
    '("geq" "GDA_SQL_OPERATOR_TYPE_GEQ" "8")
    '("leq" "GDA_SQL_OPERATOR_TYPE_LEQ" "9")
    '("diff" "GDA_SQL_OPERATOR_TYPE_DIFF" "10")
    '("regexp" "GDA_SQL_OPERATOR_TYPE_REGEXP" "11")
    '("regexp-ci" "GDA_SQL_OPERATOR_TYPE_REGEXP_CI" "12")
    '("not-regexp" "GDA_SQL_OPERATOR_TYPE_NOT_REGEXP" "13")
    '("not-regexp-ci" "GDA_SQL_OPERATOR_TYPE_NOT_REGEXP_CI" "14")
    '("similar" "GDA_SQL_OPERATOR_TYPE_SIMILAR" "15")
    '("isnull" "GDA_SQL_OPERATOR_TYPE_ISNULL" "16")
    '("isnotnull" "GDA_SQL_OPERATOR_TYPE_ISNOTNULL" "17")
    '("not" "GDA_SQL_OPERATOR_TYPE_NOT" "18")
    '("in" "GDA_SQL_OPERATOR_TYPE_IN" "19")
    '("notin" "GDA_SQL_OPERATOR_TYPE_NOTIN" "20")
    '("concat" "GDA_SQL_OPERATOR_TYPE_CONCAT" "21")
    '("plus" "GDA_SQL_OPERATOR_TYPE_PLUS" "22")
    '("minus" "GDA_SQL_OPERATOR_TYPE_MINUS" "23")
    '("star" "GDA_SQL_OPERATOR_TYPE_STAR" "24")
    '("div" "GDA_SQL_OPERATOR_TYPE_DIV" "25")
    '("rem" "GDA_SQL_OPERATOR_TYPE_REM" "26")
    '("bitand" "GDA_SQL_OPERATOR_TYPE_BITAND" "27")
    '("bitor" "GDA_SQL_OPERATOR_TYPE_BITOR" "28")
    '("bitnot" "GDA_SQL_OPERATOR_TYPE_BITNOT" "29")
  )
)

(define-enum-extended SqlSelectJoinType
  (in-module "Gda")
  (c-name "GdaSqlSelectJoinType")
  (values
    '("cross" "GDA_SQL_SELECT_JOIN_CROSS" "0")
    '("natural" "GDA_SQL_SELECT_JOIN_NATURAL" "1")
    '("inner" "GDA_SQL_SELECT_JOIN_INNER" "2")
    '("left" "GDA_SQL_SELECT_JOIN_LEFT" "3")
    '("right" "GDA_SQL_SELECT_JOIN_RIGHT" "4")
    '("full" "GDA_SQL_SELECT_JOIN_FULL" "5")
  )
)

