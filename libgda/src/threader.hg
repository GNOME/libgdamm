// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* threader.h
 *
 * Copyright 2006 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or(at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

_DEFS(libgdamm,libgda)
_PINCLUDE(glibmm/private/object_p.h)

#include <libgda/gda-threader.h>

namespace Gnome
{

namespace Gda
{

typedef GdaThreaderFunc ThreaderFunc;

/** TODO. See http://bugzilla.gnome.org/show_bug.cgi?id=561175
 *
 * @ingroup Connection
 */
class Threader : public Glib::Object
{
  _CLASS_GOBJECT(Threader, GdaThreader, GDA_THREADER, Glib::Object, GObject)
protected:
	_CTOR_DEFAULT
	
public:
  _WRAP_CREATE()
  
  _WRAP_METHOD(guint start_thread(GThreadFunc func, gpointer func_arg, ThreaderFunc ok_callback, ThreaderFunc cancel_callback), gda_threader_start_thread, errthrow)
  _WRAP_METHOD(void cancel(guint job_id), gda_threader_cancel)
  
  _WRAP_SIGNAL(void cancelled(guint arg1, gpointer arg2), "cancelled")
  _WRAP_SIGNAL(void finished(guint arg1, gpointer arg2), "finished")

};

} // namespace Gda
} // namespace Gnome

