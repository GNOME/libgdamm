// -*- C++ -*- // this is for the .hg, I realize gensig puts one in

/* datamodelrow.h
 *
 * Copyright 2003 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <libgdamm/object.h>
#include <libgdamm/datamodel.h>

_DEFS(libgdamm,libgda)
_PINCLUDE(libgdamm/private/object_p.h)

namespace Gnome
{

namespace Gda
{

class DataModelRow
 : public Object,
   public DataModel
{
  _CLASS_GOBJECT(DataModelRow, GdaDataModelRow, GDA_DATA_MODEL_ROW, Gda::Object, GdaObject)
  _IMPLEMENTS_INTERFACE(DataModel)

protected:
  // There is no create() method because there is no _new function in the C API either.

public:
  _WRAP_PROPERTY("command-text", Glib::ustring)
  _WRAP_PROPERTY("command-type", int)
  _WRAP_PROPERTY("read-only", bool)

	_WRAP_METHOD(const Glib::RefPtr<Row>  get_row(int row), gda_data_model_row_get_row, errthrow)
	_WRAP_METHOD(const Glib::RefPtr<const Row>  get_row(int row) const, gda_data_model_row_get_row, errthrow, constversion)	

  // TODO: Vfuncs
};

} // namespace Gda
} // namespace Gnome

