/* Copyright 2011 libgdamm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or(at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/ustring.h>
#include <glibmm/value.h>

_DEFS(libgdamm,libgda)

namespace Gnome
{

namespace Gda
{


/** TODO
 */
class Timestamp
{
  _CLASS_BOXEDTYPE(Timestamp, GdaTimestamp, gda_timestamp_new, gda_timestamp_copy, gda_timestamp_free)
  _IGNORE(gda_timestamp_new, gda_timestamp_copy, gda_timestamp_free)
public:

  Timestamp(gushort year, gushort month, gushort day, gushort hour, gushort minute, gushort second, gulong fraction, long timezone);

  _WRAP_METHOD(gshort get_year() const, gda_timestamp_get_year)
  _WRAP_METHOD(void set_year(gshort year), gda_timestamp_set_year)

  _WRAP_METHOD(gushort get_month() const, gda_timestamp_get_month)
  _WRAP_METHOD(void set_month(gushort month), gda_timestamp_set_month)

  _WRAP_METHOD(gushort get_day() const, gda_timestamp_get_day)
  _WRAP_METHOD(void set_day(gushort day), gda_timestamp_set_day)

  _WRAP_METHOD(gushort get_hour() const, gda_timestamp_get_hour)
  _WRAP_METHOD(void set_hour(gushort hour), gda_timestamp_set_hour)

  _WRAP_METHOD(gushort get_minute() const, gda_timestamp_get_minute)
  _WRAP_METHOD(void set_minute(gushort minute), gda_timestamp_set_minute)

  _WRAP_METHOD(gushort get_second() const, gda_timestamp_get_second)
  _WRAP_METHOD(void set_second(gushort second), gda_timestamp_set_second)

  _WRAP_METHOD(gulong get_fraction() const, gda_timestamp_get_fraction)
  _WRAP_METHOD(void set_fraction(gulong fraction), gda_timestamp_set_fraction)

  _WRAP_METHOD(long get_timezone() const, gda_timestamp_get_timezone)
  _WRAP_METHOD(void set_timezone(long month), gda_timestamp_set_timezone)

  _WRAP_METHOD(bool valid() const, gda_timestamp_valid)

  _WRAP_METHOD(void change_timezone(long ntz), gda_timestamp_change_timezone)
};


} // namespace Gda
} // namespace Gnome

