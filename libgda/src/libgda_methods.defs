;; -*- scheme -*-
; object definitions ...
(define-object Client
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaClient")
  (gtype-id "GDA_TYPE_CLIENT")
)

(define-object Connection
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaConnection")
  (gtype-id "GDA_TYPE_CONNECTION")
)

(define-object DataModel
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaDataModel")
  (gtype-id "GDA_TYPE_DATA_MODEL")
)

(define-object DataModelArray
  (in-module "Gda")
  (parent "GdaDataModel")
  (c-name "GdaDataModelArray")
  (gtype-id "GDA_TYPE_DATA_MODEL_ARRAY")
)

(define-object DataModelHash
  (in-module "Gda")
  (parent "GdaDataModel")
  (c-name "GdaDataModelHash")
  (gtype-id "GDA_TYPE_DATA_MODEL_HASH")
)

(define-object DataModelList
  (in-module "Gda")
  (parent "GdaDataModel")
  (c-name "GdaDataModelList")
  (gtype-id "GDA_TYPE_DATA_MODEL_LIST")
)

(define-object Error
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaError")
  (gtype-id "GDA_TYPE_ERROR")
)

(define-object Export
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaExport")
  (gtype-id "GDA_TYPE_EXPORT")
)

(define-object Select
  (in-module "Gda")
  (parent "GdaDataModelArray")
  (c-name "GdaSelect")
  (gtype-id "GDA_TYPE_SELECT")
)

(define-object ServerProvider
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaServerProvider")
  (gtype-id "GDA_TYPE_SERVER_PROVIDER")
)

(define-object Table
  (in-module "Gda")
  (parent "GdaDataModelArray")
  (c-name "GdaTable")
  (gtype-id "GDA_TYPE_TABLE")
)

(define-object Transaction
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaTransaction")
  (gtype-id "GDA_TYPE_TRANSACTION")
)

(define-object XmlConnection
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaXmlConnection")
  (gtype-id "GDA_TYPE_XML_CONNECTION")
)

(define-object XmlDatabase
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaXmlDatabase")
  (gtype-id "GDA_TYPE_XML_DATABASE")
)

(define-object XmlDocument
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaXmlDocument")
  (gtype-id "GDA_TYPE_XML_DOCUMENT")
)

(define-object XqlItem
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaXqlItem")
  (gtype-id "GDA_TYPE_XQL_ITEM")
)

(define-object XqlDual
  (in-module "Gda")
  (parent "GdaXqlItem")
  (c-name "GdaXqlDual")
  (gtype-id "GDA_TYPE_XQL_DUAL")
)

(define-object XqlDml
  (in-module "Gda")
  (parent "GdaXqlItem")
  (c-name "GdaXqlDml")
  (gtype-id "GDA_TYPE_XQL_DML")
)

(define-object XqlInsert
  (in-module "Gda")
  (parent "GdaXqlDml")
  (c-name "GdaXqlInsert")
  (gtype-id "GDA_TYPE_XQL_INSERT")
)

(define-object XqlDelete
  (in-module "Gda")
  (parent "GdaXqlDml")
  (c-name "GdaXqlDelete")
  (gtype-id "GDA_TYPE_XQL_DELETE")
)

(define-object XqlBin
  (in-module "Gda")
  (parent "GdaXqlItem")
  (c-name "GdaXqlBin")
  (gtype-id "GDA_TYPE_XQL_BIN")
)

(define-object XqlFunc
  (in-module "Gda")
  (parent "GdaXqlBin")
  (c-name "GdaXqlFunc")
  (gtype-id "GDA_TYPE_XQL_FUNC")
)

(define-object XqlAtom
  (in-module "Gda")
  (parent "GdaXqlItem")
  (c-name "GdaXqlAtom")
  (gtype-id "GDA_TYPE_XQL_ATOM")
)

(define-object XqlField
  (in-module "Gda")
  (parent "GdaXqlAtom")
  (c-name "GdaXqlField")
  (gtype-id "GDA_TYPE_XQL_FIELD")
)

(define-object XqlConst
  (in-module "Gda")
  (parent "GdaXqlAtom")
  (c-name "GdaXqlConst")
  (gtype-id "GDA_TYPE_XQL_CONST")
)

(define-object XqlColumn
  (in-module "Gda")
  (parent "GdaXqlAtom")
  (c-name "GdaXqlColumn")
  (gtype-id "GDA_TYPE_XQL_COLUMN")
)

(define-object XqlJoin
  (in-module "Gda")
  (parent "GdaXqlDual")
  (c-name "GdaXqlJoin")
  (gtype-id "GDA_TYPE_XQL_JOIN")
)

(define-object XqlList
  (in-module "Gda")
  (parent "GdaXqlItem")
  (c-name "GdaXqlList")
  (gtype-id "GDA_TYPE_XQL_LIST")
)

(define-object XqlQuery
  (in-module "Gda")
  (parent "GdaXqlBin")
  (c-name "GdaXqlQuery")
  (gtype-id "GDA_TYPE_XQL_QUERY")
)

(define-object XqlSelect
  (in-module "Gda")
  (parent "GdaXqlDml")
  (c-name "GdaXqlSelect")
  (gtype-id "GDA_TYPE_XQL_SELECT")
)

(define-object XqlStack
  (in-module "Gda")
  (parent "GObject")
  (c-name "GdaXqlStack")
  (gtype-id "GDA_TYPE_XQL_STACK")
)

(define-object XqlTarget
  (in-module "Gda")
  (parent "GdaXqlBin")
  (c-name "GdaXqlTarget")
  (gtype-id "GDA_TYPE_XQL_TARGET")
)

(define-object XqlUpdate
  (in-module "Gda")
  (parent "GdaXqlDml")
  (c-name "GdaXqlUpdate")
  (gtype-id "GDA_TYPE_XQL_UPDATE")
)

(define-object XqlValue
  (in-module "Gda")
  (parent "GdaXqlBin")
  (c-name "GdaXqlValue")
  (gtype-id "GDA_TYPE_XQL_VALUE")
)

(define-object XqlValueRef
  (in-module "Gda")
  (parent "GdaXqlAtom")
  (c-name "GdaXqlValueRef")
  (gtype-id "GDA_TYPE_XQL_VALUE_REF")
)

;; Enumerations and flags ...

(define-flags BlobMode
  (in-module "Gda")
  (c-name "GdaBlobMode")
  (gtype-id "GDA_TYPE_BLOB_MODE")
  (values
    '("read" "GDA_BLOB_MODE_READ")
    '("write" "GDA_BLOB_MODE_WRITE")
    '("rdwr" "GDA_BLOB_MODE_RDWR")
  )
)

(define-enum ClientEvent
  (in-module "Gda")
  (c-name "GdaClientEvent")
  (gtype-id "GDA_TYPE_CLIENT_EVENT")
  (values
    '("invalid" "GDA_CLIENT_EVENT_INVALID")
    '("error" "GDA_CLIENT_EVENT_ERROR")
    '("connection-opened" "GDA_CLIENT_EVENT_CONNECTION_OPENED")
    '("connection-closed" "GDA_CLIENT_EVENT_CONNECTION_CLOSED")
    '("transaction-started" "GDA_CLIENT_EVENT_TRANSACTION_STARTED")
    '("transaction-committed" "GDA_CLIENT_EVENT_TRANSACTION_COMMITTED")
    '("transaction-cancelled" "GDA_CLIENT_EVENT_TRANSACTION_CANCELLED")
  )
)

(define-flags CommandOptions
  (in-module "Gda")
  (c-name "GdaCommandOptions")
  (gtype-id "GDA_TYPE_COMMAND_OPTIONS")
  (values
    '("ignore-errors" "GDA_COMMAND_OPTION_IGNORE_ERRORS")
    '("stop-on-errors" "GDA_COMMAND_OPTION_STOP_ON_ERRORS")
    '("bad-option" "GDA_COMMAND_OPTION_BAD_OPTION")
  )
)

(define-enum CommandType
  (in-module "Gda")
  (c-name "GdaCommandType")
  (gtype-id "GDA_TYPE_COMMAND_TYPE")
  (values
    '("sql" "GDA_COMMAND_TYPE_SQL")
    '("xml" "GDA_COMMAND_TYPE_XML")
    '("procedure" "GDA_COMMAND_TYPE_PROCEDURE")
    '("table" "GDA_COMMAND_TYPE_TABLE")
    '("schema" "GDA_COMMAND_TYPE_SCHEMA")
    '("invalid" "GDA_COMMAND_TYPE_INVALID")
  )
)

(define-flags ConnectionOptions
  (in-module "Gda")
  (c-name "GdaConnectionOptions")
  (gtype-id "GDA_TYPE_CONNECTION_OPTIONS")
  (values
    '("read-only" "GDA_CONNECTION_OPTIONS_READ_ONLY")
    '("dont-share" "GDA_CONNECTION_OPTIONS_DONT_SHARE")
  )
)

(define-enum ConnectionFeature
  (in-module "Gda")
  (c-name "GdaConnectionFeature")
  (gtype-id "GDA_TYPE_CONNECTION_FEATURE")
  (values
    '("aggregates" "GDA_CONNECTION_FEATURE_AGGREGATES")
    '("indexes" "GDA_CONNECTION_FEATURE_INDEXES")
    '("inheritance" "GDA_CONNECTION_FEATURE_INHERITANCE")
    '("namespaces" "GDA_CONNECTION_FEATURE_NAMESPACES")
    '("procedures" "GDA_CONNECTION_FEATURE_PROCEDURES")
    '("sequences" "GDA_CONNECTION_FEATURE_SEQUENCES")
    '("sql" "GDA_CONNECTION_FEATURE_SQL")
    '("transactions" "GDA_CONNECTION_FEATURE_TRANSACTIONS")
    '("triggers" "GDA_CONNECTION_FEATURE_TRIGGERS")
    '("users" "GDA_CONNECTION_FEATURE_USERS")
    '("views" "GDA_CONNECTION_FEATURE_VIEWS")
    '("xml-queries" "GDA_CONNECTION_FEATURE_XML_QUERIES")
    '("blobs" "GDA_CONNECTION_FEATURE_BLOBS")
  )
)

(define-enum ConnectionSchema
  (in-module "Gda")
  (c-name "GdaConnectionSchema")
  (gtype-id "GDA_TYPE_CONNECTION_SCHEMA")
  (values
    '("aggregates" "GDA_CONNECTION_SCHEMA_AGGREGATES")
    '("databases" "GDA_CONNECTION_SCHEMA_DATABASES")
    '("fields" "GDA_CONNECTION_SCHEMA_FIELDS")
    '("indexes" "GDA_CONNECTION_SCHEMA_INDEXES")
    '("languages" "GDA_CONNECTION_SCHEMA_LANGUAGES")
    '("namespaces" "GDA_CONNECTION_SCHEMA_NAMESPACES")
    '("parent-tables" "GDA_CONNECTION_SCHEMA_PARENT_TABLES")
    '("procedures" "GDA_CONNECTION_SCHEMA_PROCEDURES")
    '("sequences" "GDA_CONNECTION_SCHEMA_SEQUENCES")
    '("tables" "GDA_CONNECTION_SCHEMA_TABLES")
    '("triggers" "GDA_CONNECTION_SCHEMA_TRIGGERS")
    '("types" "GDA_CONNECTION_SCHEMA_TYPES")
    '("users" "GDA_CONNECTION_SCHEMA_USERS")
    '("views" "GDA_CONNECTION_SCHEMA_VIEWS")
  )
)

(define-enum ExportFlags
  (in-module "Gda")
  (c-name "GdaExportFlags")
  (gtype-id "GDA_TYPE_EXPORT_FLAGS")
  (values
    '("a" "GDA_EXPORT_FLAGS_TABLE_DATA")
  )
)

(define-enum TransactionIsolation
  (in-module "Gda")
  (c-name "GdaTransactionIsolation")
  (gtype-id "GDA_TYPE_TRANSACTION_ISOLATION")
  (values
    '("unknown" "GDA_TRANSACTION_ISOLATION_UNKNOWN")
    '("read-committed" "GDA_TRANSACTION_ISOLATION_READ_COMMITTED")
    '("read-uncommitted" "GDA_TRANSACTION_ISOLATION_READ_UNCOMMITTED")
    '("repeatable-read" "GDA_TRANSACTION_ISOLATION_REPEATABLE_READ")
    '("serializable" "GDA_TRANSACTION_ISOLATION_SERIALIZABLE")
  )
)

(define-enum ValueType
  (in-module "Gda")
  (c-name "GdaValueType")
  (gtype-id "GDA_TYPE_VALUE_TYPE")
  (values
    '("null" "GDA_VALUE_TYPE_NULL")
    '("bigint" "GDA_VALUE_TYPE_BIGINT")
    '("biguint" "GDA_VALUE_TYPE_BIGUINT")
    '("binary" "GDA_VALUE_TYPE_BINARY")
    '("blob" "GDA_VALUE_TYPE_BLOB")
    '("boolean" "GDA_VALUE_TYPE_BOOLEAN")
    '("date" "GDA_VALUE_TYPE_DATE")
    '("double" "GDA_VALUE_TYPE_DOUBLE")
    '("geometric-point" "GDA_VALUE_TYPE_GEOMETRIC_POINT")
    '("gobject" "GDA_VALUE_TYPE_GOBJECT")
    '("integer" "GDA_VALUE_TYPE_INTEGER")
    '("list" "GDA_VALUE_TYPE_LIST")
    '("money" "GDA_VALUE_TYPE_MONEY")
    '("numeric" "GDA_VALUE_TYPE_NUMERIC")
    '("single" "GDA_VALUE_TYPE_SINGLE")
    '("smallint" "GDA_VALUE_TYPE_SMALLINT")
    '("smalluint" "GDA_VALUE_TYPE_SMALLUINT")
    '("string" "GDA_VALUE_TYPE_STRING")
    '("time" "GDA_VALUE_TYPE_TIME")
    '("timestamp" "GDA_VALUE_TYPE_TIMESTAMP")
    '("tinyint" "GDA_VALUE_TYPE_TINYINT")
    '("tinyuint" "GDA_VALUE_TYPE_TINYUINT")
    '("type" "GDA_VALUE_TYPE_TYPE")
    '("uinteger" "GDA_VALUE_TYPE_UINTEGER")
    '("unknown" "GDA_VALUE_TYPE_UNKNOWN")
  )
)


;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-blob.h

(define-function gint
  (c-name "gint")
  (return-type "G_BEGIN_DECLS")
  (parameters
    '("*" "read")
  )
)

(define-method open
  (of-object "GdaBlob")
  (c-name "gda_blob_open")
  (return-type "gint")
  (parameters
    '("GdaBlobMode" "mode")
  )
)

(define-method read
  (of-object "GdaBlob")
  (c-name "gda_blob_read")
  (return-type "gint")
  (parameters
    '("gpointer" "buf")
    '("gint" "size")
    '("gint*" "bytes_read")
  )
)

(define-method write
  (of-object "GdaBlob")
  (c-name "gda_blob_write")
  (return-type "gint")
  (parameters
    '("gpointer" "buf")
    '("gint" "size")
    '("gint*" "bytes_written")
  )
)

(define-method lseek
  (of-object "GdaBlob")
  (c-name "gda_blob_lseek")
  (return-type "gint")
  (parameters
    '("gint" "offset")
    '("gint" "whence")
  )
)

(define-method close
  (of-object "GdaBlob")
  (c-name "gda_blob_close")
  (return-type "gint")
)

(define-method remove
  (of-object "GdaBlob")
  (c-name "gda_blob_remove")
  (return-type "gint")
)

(define-method free_data
  (of-object "GdaBlob")
  (c-name "gda_blob_free_data")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-client.h

(define-function gda_client_get_type
  (c-name "gda_client_get_type")
  (return-type "GType")
)

(define-function gda_client_new
  (c-name "gda_client_new")
  (is-constructor-of "GdaClient")
  (return-type "GdaClient*")
)

(define-method open_connection
  (of-object "GdaClient")
  (c-name "gda_client_open_connection")
  (return-type "GdaConnection*")
  (parameters
    '("const-gchar*" "dsn")
    '("const-gchar*" "username")
    '("const-gchar*" "password")
    '("GdaConnectionOptions" "options")
  )
)

(define-method open_connection_from_string
  (of-object "GdaClient")
  (c-name "gda_client_open_connection_from_string")
  (return-type "GdaConnection*")
  (parameters
    '("const-gchar*" "provider_id")
    '("const-gchar*" "cnc_string")
    '("GdaConnectionOptions" "options")
  )
)

(define-method get_connection_list
  (of-object "GdaClient")
  (c-name "gda_client_get_connection_list")
  (return-type "const-GList*")
)

(define-method find_connection
  (of-object "GdaClient")
  (c-name "gda_client_find_connection")
  (return-type "GdaConnection*")
  (parameters
    '("const-gchar*" "dsn")
    '("const-gchar*" "username")
    '("const-gchar*" "password")
  )
)

(define-method close_all_connections
  (of-object "GdaClient")
  (c-name "gda_client_close_all_connections")
  (return-type "none")
)

(define-method notify_event
  (of-object "GdaClient")
  (c-name "gda_client_notify_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaClientEvent" "event")
    '("GdaParameterList*" "params")
  )
)

(define-method notify_error_event
  (of-object "GdaClient")
  (c-name "gda_client_notify_error_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaError*" "error")
  )
)

(define-method notify_connection_opened_event
  (of-object "GdaClient")
  (c-name "gda_client_notify_connection_opened_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
  )
)

(define-function gda_client_notify_connection_closed_event
  (c-name "gda_client_notify_connection_closed_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
  )
)

(define-method notify_transaction_started_event
  (of-object "GdaClient")
  (c-name "gda_client_notify_transaction_started_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaTransaction*" "xaction")
  )
)

(define-method notify_transaction_committed_event
  (of-object "GdaClient")
  (c-name "gda_client_notify_transaction_committed_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaTransaction*" "xaction")
  )
)

(define-method notify_transaction_cancelled_event
  (of-object "GdaClient")
  (c-name "gda_client_notify_transaction_cancelled_event")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaTransaction*" "xaction")
  )
)

(define-method begin_transaction
  (of-object "GdaClient")
  (c-name "gda_client_begin_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)

(define-method commit_transaction
  (of-object "GdaClient")
  (c-name "gda_client_commit_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)

(define-method rollback_transaction
  (of-object "GdaClient")
  (c-name "gda_client_rollback_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-command.h

(define-function gda_command_new
  (c-name "gda_command_new")
  (is-constructor-of "GdaCommand")
  (return-type "GdaCommand*")
  (parameters
    '("const-gchar*" "text")
    '("GdaCommandType" "type")
    '("GdaCommandOptions" "options")
  )
)

(define-method free
  (of-object "GdaCommand")
  (c-name "gda_command_free")
  (return-type "none")
)

(define-method get_text
  (of-object "GdaCommand")
  (c-name "gda_command_get_text")
  (return-type "const-gchar*")
)

(define-method set_text
  (of-object "GdaCommand")
  (c-name "gda_command_set_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method get_command_type
  (of-object "GdaCommand")
  (c-name "gda_command_get_command_type")
  (return-type "GdaCommandType")
)

(define-method set_command_type
  (of-object "GdaCommand")
  (c-name "gda_command_set_command_type")
  (return-type "none")
  (parameters
    '("GdaCommandType" "type")
  )
)

(define-method get_options
  (of-object "GdaCommand")
  (c-name "gda_command_get_options")
  (return-type "GdaCommandOptions")
)

(define-method set_options
  (of-object "GdaCommand")
  (c-name "gda_command_set_options")
  (return-type "none")
  (parameters
    '("GdaCommandOptions" "options")
  )
)

(define-method get_transaction
  (of-object "GdaCommand")
  (c-name "gda_command_get_transaction")
  (return-type "GdaTransaction*")
)

(define-method set_transaction
  (of-object "GdaCommand")
  (c-name "gda_command_set_transaction")
  (return-type "none")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-config.h

(define-function gda_config_get_int
  (c-name "gda_config_get_int")
  (return-type "gint")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_get_float
  (c-name "gda_config_get_float")
  (return-type "gdouble")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_get_boolean
  (c-name "gda_config_get_boolean")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_set_string
  (c-name "gda_config_set_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("const-gchar*" "new_value")
  )
)

(define-function gda_config_set_int
  (c-name "gda_config_set_int")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("gint" "new_value")
  )
)

(define-function gda_config_set_float
  (c-name "gda_config_set_float")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("gdouble" "new_value")
  )
)

(define-function gda_config_set_boolean
  (c-name "gda_config_set_boolean")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
    '("gboolean" "new_value")
  )
)

(define-function gda_config_remove_section
  (c-name "gda_config_remove_section")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_remove_key
  (c-name "gda_config_remove_key")
  (return-type "none")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_has_section
  (c-name "gda_config_has_section")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_has_key
  (c-name "gda_config_has_key")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_list_sections
  (c-name "gda_config_list_sections")
  (return-type "GList*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_list_keys
  (c-name "gda_config_list_keys")
  (return-type "GList*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_get_type
  (c-name "gda_config_get_type")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "path")
  )
)

(define-function gda_config_free_list
  (c-name "gda_config_free_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function gda_config_add_listener
  (c-name "gda_config_add_listener")
  (return-type "guint")
  (parameters
    '("const-gchar*" "path")
    '("GdaConfigListenerFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-function gda_config_remove_listener
  (c-name "gda_config_remove_listener")
  (return-type "none")
  (parameters
    '("guint" "id")
  )
)

(define-function gda_config_get_provider_list
  (c-name "gda_config_get_provider_list")
  (return-type "GList*")
)

(define-function gda_config_free_provider_list
  (c-name "gda_config_free_provider_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function gda_config_get_provider_by_name
  (c-name "gda_config_get_provider_by_name")
  (return-type "GdaProviderInfo*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function gda_config_free_provider_info
  (c-name "gda_config_free_provider_info")
  (return-type "none")
  (parameters
    '("GdaProviderInfo*" "provider_info")
  )
)

(define-function gda_config_get_data_source_list
  (c-name "gda_config_get_data_source_list")
  (return-type "GList*")
)

(define-function gda_config_find_data_source
  (c-name "gda_config_find_data_source")
  (return-type "GdaDataSourceInfo*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function gda_config_copy_data_source_info
  (c-name "gda_config_copy_data_source_info")
  (return-type "GdaDataSourceInfo*")
  (parameters
    '("GdaDataSourceInfo*" "info")
  )
)

(define-function gda_config_free_data_source_info
  (c-name "gda_config_free_data_source_info")
  (return-type "none")
  (parameters
    '("GdaDataSourceInfo*" "info")
  )
)

(define-function gda_config_free_data_source_list
  (c-name "gda_config_free_data_source_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-function gda_config_get_data_source_model
  (c-name "gda_config_get_data_source_model")
  (return-type "GdaDataModel*")
)

(define-function gda_config_save_data_source
  (c-name "gda_config_save_data_source")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "provider")
    '("const-gchar*" "cnc_string")
    '("const-gchar*" "description")
    '("const-gchar*" "username")
    '("const-gchar*" "password")
  )
)

(define-function gda_config_save_data_source_info
  (c-name "gda_config_save_data_source_info")
  (return-type "none")
  (parameters
    '("GdaDataSourceInfo*" "dsn_info")
  )
)

(define-function gda_config_remove_data_source
  (c-name "gda_config_remove_data_source")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-connection.h

(define-function gda_connection_get_type
  (c-name "gda_connection_get_type")
  (return-type "GType")
)

(define-function gda_connection_new
  (c-name "gda_connection_new")
  (is-constructor-of "GdaConnection")
  (return-type "GdaConnection*")
  (parameters
    '("GdaClient*" "client")
    '("GdaServerProvider*" "provider")
    '("const-gchar*" "dsn")
    '("const-gchar*" "username")
    '("const-gchar*" "password")
    '("GdaConnectionOptions" "options")
  )
)

(define-method close
  (of-object "GdaConnection")
  (c-name "gda_connection_close")
  (return-type "gboolean")
)

(define-method is_open
  (of-object "GdaConnection")
  (c-name "gda_connection_is_open")
  (return-type "gboolean")
)

(define-method get_client
  (of-object "GdaConnection")
  (c-name "gda_connection_get_client")
  (return-type "GdaClient*")
)

(define-method set_client
  (of-object "GdaConnection")
  (c-name "gda_connection_set_client")
  (return-type "none")
  (parameters
    '("GdaClient*" "client")
  )
)

(define-method get_options
  (of-object "GdaConnection")
  (c-name "gda_connection_get_options")
  (return-type "GdaConnectionOptions")
)

(define-method get_server_version
  (of-object "GdaConnection")
  (c-name "gda_connection_get_server_version")
  (return-type "const-gchar*")
)

(define-method get_database
  (of-object "GdaConnection")
  (c-name "gda_connection_get_database")
  (return-type "const-gchar*")
)

(define-method get_dsn
  (of-object "GdaConnection")
  (c-name "gda_connection_get_dsn")
  (return-type "const-gchar*")
)

(define-method get_cnc_string
  (of-object "GdaConnection")
  (c-name "gda_connection_get_cnc_string")
  (return-type "const-gchar*")
)

(define-method get_provider
  (of-object "GdaConnection")
  (c-name "gda_connection_get_provider")
  (return-type "const-gchar*")
)

(define-method get_username
  (of-object "GdaConnection")
  (c-name "gda_connection_get_username")
  (return-type "const-gchar*")
)

(define-method get_password
  (of-object "GdaConnection")
  (c-name "gda_connection_get_password")
  (return-type "const-gchar*")
)

(define-method add_error
  (of-object "GdaConnection")
  (c-name "gda_connection_add_error")
  (return-type "none")
  (parameters
    '("GdaError*" "error")
  )
)

(define-method add_error_string
  (of-object "GdaConnection")
  (c-name "gda_connection_add_error_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "str")
  )
  (varargs #t)
)

(define-method add_error_list
  (of-object "GdaConnection")
  (c-name "gda_connection_add_error_list")
  (return-type "none")
  (parameters
    '("GList*" "error_list")
  )
)

(define-method change_database
  (of-object "GdaConnection")
  (c-name "gda_connection_change_database")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method create_database
  (of-object "GdaConnection")
  (c-name "gda_connection_create_database")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method drop_database
  (of-object "GdaConnection")
  (c-name "gda_connection_drop_database")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method execute_command
  (of-object "GdaConnection")
  (c-name "gda_connection_execute_command")
  (return-type "GList*")
  (parameters
    '("GdaCommand*" "cmd")
    '("GdaParameterList*" "params")
  )
)

(define-method execute_single_command
  (of-object "GdaConnection")
  (c-name "gda_connection_execute_single_command")
  (return-type "GdaDataModel*")
  (parameters
    '("GdaCommand*" "cmd")
    '("GdaParameterList*" "params")
  )
)

(define-method execute_non_query
  (of-object "GdaConnection")
  (c-name "gda_connection_execute_non_query")
  (return-type "gint")
  (parameters
    '("GdaCommand*" "cmd")
    '("GdaParameterList*" "params")
  )
)

(define-method begin_transaction
  (of-object "GdaConnection")
  (c-name "gda_connection_begin_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)

(define-method commit_transaction
  (of-object "GdaConnection")
  (c-name "gda_connection_commit_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)

(define-method rollback_transaction
  (of-object "GdaConnection")
  (c-name "gda_connection_rollback_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaTransaction*" "xaction")
  )
)

(define-method create_blob
  (of-object "GdaConnection")
  (c-name "gda_connection_create_blob")
  (return-type "gboolean")
  (parameters
    '("GdaBlob*" "blob")
  )
)

(define-method get_errors
  (of-object "GdaConnection")
  (c-name "gda_connection_get_errors")
  (return-type "const-GList*")
)

(define-method supports
  (of-object "GdaConnection")
  (c-name "gda_connection_supports")
  (return-type "gboolean")
  (parameters
    '("GdaConnectionFeature" "feature")
  )
)

(define-method get_schema
  (of-object "GdaConnection")
  (c-name "gda_connection_get_schema")
  (return-type "GdaDataModel*")
  (parameters
    '("GdaConnectionSchema" "schema")
    '("GdaParameterList*" "params")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-data-model-array.h

(define-function gda_data_model_array_get_type
  (c-name "gda_data_model_array_get_type")
  (return-type "GType")
)

(define-function gda_data_model_array_new
  (c-name "gda_data_model_array_new")
  (is-constructor-of "GdaDataModelArray")
  (return-type "GdaDataModel*")
  (parameters
    '("gint" "cols")
  )
)

(define-method set_n_columns
  (of-object "GdaDataModelArray")
  (c-name "gda_data_model_array_set_n_columns")
  (return-type "none")
  (parameters
    '("gint" "cols")
  )
)

(define-method clear
  (of-object "GdaDataModelArray")
  (c-name "gda_data_model_array_clear")
  (return-type "none")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-data-model.h

(define-function gda_data_model_get_type
  (c-name "gda_data_model_get_type")
  (return-type "GType")
)

(define-method changed
  (of-object "GdaDataModel")
  (c-name "gda_data_model_changed")
  (return-type "none")
)

(define-method row_inserted
  (of-object "GdaDataModel")
  (c-name "gda_data_model_row_inserted")
  (return-type "none")
  (parameters
    '("gint" "row")
  )
)

(define-method row_updated
  (of-object "GdaDataModel")
  (c-name "gda_data_model_row_updated")
  (return-type "none")
  (parameters
    '("gint" "row")
  )
)

(define-method row_removed
  (of-object "GdaDataModel")
  (c-name "gda_data_model_row_removed")
  (return-type "none")
  (parameters
    '("gint" "row")
  )
)

(define-method freeze
  (of-object "GdaDataModel")
  (c-name "gda_data_model_freeze")
  (return-type "none")
)

(define-method thaw
  (of-object "GdaDataModel")
  (c-name "gda_data_model_thaw")
  (return-type "none")
)

(define-method get_n_rows
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_n_rows")
  (return-type "gint")
)

(define-method get_n_columns
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_n_columns")
  (return-type "gint")
)

(define-method describe_column
  (of-object "GdaDataModel")
  (c-name "gda_data_model_describe_column")
  (return-type "GdaFieldAttributes*")
  (parameters
    '("gint" "col")
  )
)

(define-method get_column_title
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_column_title")
  (return-type "const-gchar*")
  (parameters
    '("gint" "col")
  )
)

(define-method set_column_title
  (of-object "GdaDataModel")
  (c-name "gda_data_model_set_column_title")
  (return-type "none")
  (parameters
    '("gint" "col")
    '("const-gchar*" "title")
  )
)

(define-method get_column_position
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_column_position")
  (return-type "gint")
  (parameters
    '("const-gchar*" "title")
  )
)

(define-method get_row
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_row")
  (return-type "const-GdaRow*")
  (parameters
    '("gint" "row")
  )
)

(define-method get_value_at
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_value_at")
  (return-type "const-GdaValue*")
  (parameters
    '("gint" "col")
    '("gint" "row")
  )
)

(define-method is_editable
  (of-object "GdaDataModel")
  (c-name "gda_data_model_is_updatable")
  (return-type "gboolean")
)

(define-method append_row
  (of-object "GdaDataModel")
  (c-name "gda_data_model_append_row")
  (return-type "const-GdaRow*")
  (parameters
    '("const-GList*" "values")
  )
)

(define-method remove_row
  (of-object "GdaDataModel")
  (c-name "gda_data_model_remove_row")
  (return-type "gboolean")
  (parameters
    '("const-GdaRow*" "row")
  )
)

(define-method update_row
  (of-object "GdaDataModel")
  (c-name "gda_data_model_update_row")
  (return-type "gboolean")
  (parameters
    '("const-GdaRow*" "row")
  )
)

(define-method foreach
  (of-object "GdaDataModel")
  (c-name "gda_data_model_foreach")
  (return-type "none")
  (parameters
    '("GdaDataModelForeachFunc" "func")
    '("gpointer" "user_data")
  )
)

(define-method is_editing
  (of-object "GdaDataModel")
  (c-name "gda_data_model_has_changed")
  (return-type "gboolean")
)

(define-method begin_edit
  (of-object "GdaDataModel")
  (c-name "gda_data_model_begin_update")
  (return-type "gboolean")
)

(define-method cancel_edit
  (of-object "GdaDataModel")
  (c-name "gda_data_model_cancel_update")
  (return-type "gboolean")
)

(define-method end_edit
  (of-object "GdaDataModel")
  (c-name "gda_data_model_end_update")
  (return-type "gboolean")
)

(define-method to_comma_separated
  (of-object "GdaDataModel")
  (c-name "gda_data_model_to_comma_separated")
  (return-type "gchar*")
)

(define-method to_tab_separated
  (of-object "GdaDataModel")
  (c-name "gda_data_model_to_tab_separated")
  (return-type "gchar*")
)

(define-method to_xml
  (of-object "GdaDataModel")
  (c-name "gda_data_model_to_xml")
  (return-type "gchar*")
  (parameters
    '("gboolean" "standalone")
  )
)

(define-method to_xml_node
  (of-object "GdaDataModel")
  (c-name "gda_data_model_to_xml_node")
  (return-type "xmlNodePtr")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method add_data_from_xml_node
  (of-object "GdaDataModel")
  (c-name "gda_data_model_add_data_from_xml_node")
  (return-type "gboolean")
  (parameters
    '("xmlNodePtr" "node")
  )
)

(define-method get_command_text
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_command_text")
  (return-type "const-gchar*")
)

(define-method set_command_text
  (of-object "GdaDataModel")
  (c-name "gda_data_model_set_command_text")
  (return-type "none")
  (parameters
    '("const-gchar*" "txt")
  )
)

(define-method get_command_type
  (of-object "GdaDataModel")
  (c-name "gda_data_model_get_command_type")
  (return-type "GdaCommandType")
)

(define-method set_command_type
  (of-object "GdaDataModel")
  (c-name "gda_data_model_set_command_type")
  (return-type "none")
  (parameters
    '("GdaCommandType" "type")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-data-model-hash.h

(define-function gda_data_model_hash_get_type
  (c-name "gda_data_model_hash_get_type")
  (return-type "GType")
)

(define-function gda_data_model_hash_new
  (c-name "gda_data_model_hash_new")
  (is-constructor-of "GdaDataModelHash")
  (return-type "GdaDataModel*")
  (parameters
    '("gint" "cols")
  )
)

(define-method hash_get_value_at
  (of-object "GdaDataModel")
  (c-name "gda_data_model_hash_get_value_at")
  (return-type "const-GdaValue*")
  (parameters
    '("gint" "col")
    '("gint" "row")
  )
)

(define-method clear
  (of-object "GdaDataModelHash")
  (c-name "gda_data_model_hash_clear")
  (return-type "none")
)

(define-method set_n_columns
  (of-object "GdaDataModelHash")
  (c-name "gda_data_model_hash_set_n_columns")
  (return-type "none")
  (parameters
    '("gint" "cols")
  )
)

(define-method insert_row
  (of-object "GdaDataModelHash")
  (c-name "gda_data_model_hash_insert_row")
  (return-type "none")
  (parameters
    '("gint" "rownum")
    '("GdaRow*" "row")
  )
)

(define-method hash_get_row
  (of-object "GdaDataModel")
  (c-name "gda_data_model_hash_get_row")
  (return-type "const-GdaRow*")
  (parameters
    '("gint" "row")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-data-model-list.h

(define-function gda_data_model_list_get_type
  (c-name "gda_data_model_list_get_type")
  (return-type "GType")
)

(define-function gda_data_model_list_new
  (c-name "gda_data_model_list_new")
  (is-constructor-of "GdaDataModelList")
  (return-type "GdaDataModel*")
)

(define-function gda_data_model_list_new_from_string_list
  (c-name "gda_data_model_list_new_from_string_list")
  (return-type "GdaDataModel*")
  (parameters
    '("const-GList*" "list")
  )
)

(define-method append_value
  (of-object "GdaDataModelList")
  (c-name "gda_data_model_list_append_value")
  (return-type "const-GdaRow*")
  (parameters
    '("const-GdaValue*" "value")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-enum-types.h

(define-function gda_client_event_get_type
  (c-name "gda_client_event_get_type")
  (return-type "GType")
)

(define-function gda_command_options_get_type
  (c-name "gda_command_options_get_type")
  (return-type "GType")
)

(define-function gda_command_type_get_type
  (c-name "gda_command_type_get_type")
  (return-type "GType")
)

(define-function gda_connection_options_get_type
  (c-name "gda_connection_options_get_type")
  (return-type "GType")
)

(define-function gda_connection_feature_get_type
  (c-name "gda_connection_feature_get_type")
  (return-type "GType")
)

(define-function gda_connection_schema_get_type
  (c-name "gda_connection_schema_get_type")
  (return-type "GType")
)

(define-function gda_export_flags_get_type
  (c-name "gda_export_flags_get_type")
  (return-type "GType")
)

(define-function gda_transaction_isolation_get_type
  (c-name "gda_transaction_isolation_get_type")
  (return-type "GType")
)

(define-function gda_value_type_get_type
  (c-name "gda_value_type_get_type")
  (return-type "GType")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-error.h

(define-function gda_error_get_type
  (c-name "gda_error_get_type")
  (return-type "GType")
)

(define-function gda_error_new
  (c-name "gda_error_new")
  (is-constructor-of "GdaError")
  (return-type "GdaError*")
)

(define-method free
  (of-object "GdaError")
  (c-name "gda_error_free")
  (return-type "none")
)

(define-function gda_error_list_copy
  (c-name "gda_error_list_copy")
  (return-type "GList*")
  (parameters
    '("const-GList*" "errors")
  )
)

(define-function gda_error_list_free
  (c-name "gda_error_list_free")
  (return-type "none")
  (parameters
    '("GList*" "errors")
  )
)

(define-method get_description
  (of-object "GdaError")
  (c-name "gda_error_get_description")
  (return-type "const-gchar*")
)

(define-method set_description
  (of-object "GdaError")
  (c-name "gda_error_set_description")
  (return-type "none")
  (parameters
    '("const-gchar*" "description")
  )
)

(define-method get_number
  (of-object "GdaError")
  (c-name "gda_error_get_number")
  (return-type "const-glong")
)

(define-method set_number
  (of-object "GdaError")
  (c-name "gda_error_set_number")
  (return-type "none")
  (parameters
    '("glong" "number")
  )
)

(define-method get_source
  (of-object "GdaError")
  (c-name "gda_error_get_source")
  (return-type "const-gchar*")
)

(define-method set_source
  (of-object "GdaError")
  (c-name "gda_error_set_source")
  (return-type "none")
  (parameters
    '("const-gchar*" "source")
  )
)

(define-method get_sqlstate
  (of-object "GdaError")
  (c-name "gda_error_get_sqlstate")
  (return-type "const-gchar*")
)

(define-method set_sqlstate
  (of-object "GdaError")
  (c-name "gda_error_set_sqlstate")
  (return-type "none")
  (parameters
    '("const-gchar*" "sqlstate")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-export.h

(define-function gda_export_get_type
  (c-name "gda_export_get_type")
  (return-type "GType")
)

(define-function gda_export_new
  (c-name "gda_export_new")
  (is-constructor-of "GdaExport")
  (return-type "GdaExport*")
  (parameters
    '("GdaConnection*" "cnc")
  )
)

(define-method get_tables
  (of-object "GdaExport")
  (c-name "gda_export_get_tables")
  (return-type "GList*")
)

(define-method get_selected_tables
  (of-object "GdaExport")
  (c-name "gda_export_get_selected_tables")
  (return-type "GList*")
)

(define-method select_table
  (of-object "GdaExport")
  (c-name "gda_export_select_table")
  (return-type "none")
  (parameters
    '("const-gchar*" "table")
  )
)

(define-method select_table_list
  (of-object "GdaExport")
  (c-name "gda_export_select_table_list")
  (return-type "none")
  (parameters
    '("GList*" "tables")
  )
)

(define-method unselect_table
  (of-object "GdaExport")
  (c-name "gda_export_unselect_table")
  (return-type "none")
  (parameters
    '("const-gchar*" "table")
  )
)

(define-method run
  (of-object "GdaExport")
  (c-name "gda_export_run")
  (return-type "none")
  (parameters
    '("GdaExportFlags" "flags")
  )
)

(define-method stop
  (of-object "GdaExport")
  (c-name "gda_export_stop")
  (return-type "none")
)

(define-method get_connection
  (of-object "GdaExport")
  (c-name "gda_export_get_connection")
  (return-type "GdaConnection*")
)

(define-method set_connection
  (of-object "GdaExport")
  (c-name "gda_export_set_connection")
  (return-type "none")
  (parameters
    '("GdaConnection*" "cnc")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-field.h

(define-function gda_field_attributes_new
  (c-name "gda_field_attributes_new")
  (is-constructor-of "GdaFieldAttributes")
  (return-type "GdaFieldAttributes*")
)

(define-method copy
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_copy")
  (return-type "GdaFieldAttributes*")
)

(define-method free
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_free")
  (return-type "none")
)

(define-method get_defined_size
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_defined_size")
  (return-type "glong")
)

(define-method set_defined_size
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_defined_size")
  (return-type "none")
  (parameters
    '("glong" "size")
  )
)

(define-method get_name
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_table
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_table")
  (return-type "const-gchar*")
)

(define-method set_table
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_table")
  (return-type "none")
  (parameters
    '("const-gchar*" "table")
  )
)

(define-method get_caption
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_caption")
  (return-type "const-gchar*")
)

(define-method set_caption
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_caption")
  (return-type "none")
  (parameters
    '("const-gchar*" "caption")
  )
)

(define-method get_scale
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_scale")
  (return-type "glong")
)

(define-method set_scale
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_scale")
  (return-type "none")
  (parameters
    '("glong" "scale")
  )
)

(define-method get_gdatype
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_gdatype")
  (return-type "GdaValueType")
)

(define-method set_gdatype
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_gdatype")
  (return-type "none")
  (parameters
    '("GdaValueType" "type")
  )
)

(define-method get_allow_null
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_allow_null")
  (return-type "gboolean")
)

(define-method set_allow_null
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_allow_null")
  (return-type "none")
  (parameters
    '("gboolean" "allow")
  )
)

(define-method get_primary_key
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_primary_key")
  (return-type "gboolean")
)

(define-method set_primary_key
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_primary_key")
  (return-type "none")
  (parameters
    '("gboolean" "pk")
  )
)

(define-method get_unique_key
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_unique_key")
  (return-type "gboolean")
)

(define-method set_unique_key
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_unique_key")
  (return-type "none")
  (parameters
    '("gboolean" "uk")
  )
)

(define-method get_references
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_references")
  (return-type "const-gchar*")
)

(define-method set_references
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_references")
  (return-type "none")
  (parameters
    '("const-gchar*" "ref")
  )
)

(define-method get_auto_increment
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_auto_increment")
  (return-type "gboolean")
)

(define-method set_auto_increment
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_auto_increment")
  (return-type "none")
  (parameters
    '("gboolean" "is_auto")
  )
)

(define-method get_position
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_get_position")
  (return-type "gint")
)

(define-method set_position
  (of-object "GdaFieldAttributes")
  (c-name "gda_field_attributes_set_position")
  (return-type "none")
  (parameters
    '("gint" "position")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-intl.h



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-log.h

(define-function gda_log_disable
  (c-name "gda_log_disable")
  (return-type "none")
)

(define-function gda_log_is_enabled
  (c-name "gda_log_is_enabled")
  (return-type "gboolean")
)

(define-function gda_log_message
  (c-name "gda_log_message")
  (return-type "none")
  (parameters
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function gda_log_error
  (c-name "gda_log_error")
  (return-type "none")
  (parameters
    '("const-gchar*" "format")
  )
  (varargs #t)
)

(define-function gda_log_clean_all
  (c-name "gda_log_clean_all")
  (return-type "none")
  (parameters
    '("const-gchar*" "prgname")
  )
)

(define-function gda_log_clean_between
  (c-name "gda_log_clean_between")
  (return-type "none")
  (parameters
    '("const-gchar*" "prgname")
    '("time_t" "from")
    '("time_t" "to")
  )
)

(define-function gda_log_clean_entry
  (c-name "gda_log_clean_entry")
  (return-type "none")
  (parameters
    '("const-gchar*" "prgname")
    '("const-gchar*" "entry")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-marshal.h



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-parameter.h

(define-function gda_parameter_new_from_value
  (c-name "gda_parameter_new_from_value")
  (return-type "GdaParameter*")
  (parameters
    '("const-gchar*" "name")
    '("GdaValue*" "value")
  )
)

(define-function gda_parameter_new_boolean
  (c-name "gda_parameter_new_boolean")
  (return-type "GdaParameter*")
  (parameters
    '("const-gchar*" "name")
    '("gboolean" "value")
  )
)

(define-function gda_parameter_new_double
  (c-name "gda_parameter_new_double")
  (return-type "GdaParameter*")
  (parameters
    '("const-gchar*" "name")
    '("gdouble" "value")
  )
)

(define-function gda_parameter_new_gobject
  (c-name "gda_parameter_new_gobject")
  (return-type "GdaParameter*")
  (parameters
    '("const-gchar*" "name")
    '("const-GObject*" "value")
  )
)

(define-function gda_parameter_new_string
  (c-name "gda_parameter_new_string")
  (return-type "GdaParameter*")
  (parameters
    '("const-gchar*" "name")
    '("const-gchar*" "value")
  )
)

(define-method free
  (of-object "GdaParameter")
  (c-name "gda_parameter_free")
  (return-type "none")
)

(define-method get_name
  (of-object "GdaParameter")
  (c-name "gda_parameter_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "GdaParameter")
  (c-name "gda_parameter_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_value
  (of-object "GdaParameter")
  (c-name "gda_parameter_get_value")
  (return-type "const-GdaValue*")
)

(define-method set_value
  (of-object "GdaParameter")
  (c-name "gda_parameter_set_value")
  (return-type "none")
  (parameters
    '("GdaValue*" "value")
  )
)

(define-function gda_parameter_list_new
  (c-name "gda_parameter_list_new")
  (is-constructor-of "GdaParameterList")
  (return-type "GdaParameterList*")
)

(define-method free
  (of-object "GdaParameterList")
  (c-name "gda_parameter_list_free")
  (return-type "none")
)

(define-method add_parameter
  (of-object "GdaParameterList")
  (c-name "gda_parameter_list_add_parameter")
  (return-type "none")
  (parameters
    '("GdaParameter*" "param")
  )
)

(define-method get_names
  (of-object "GdaParameterList")
  (c-name "gda_parameter_list_get_names")
  (return-type "GList*")
)

(define-method find
  (of-object "GdaParameterList")
  (c-name "gda_parameter_list_find")
  (return-type "GdaParameter*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method clear
  (of-object "GdaParameterList")
  (c-name "gda_parameter_list_clear")
  (return-type "none")
)

(define-method get_length
  (of-object "GdaParameterList")
  (c-name "gda_parameter_list_get_length")
  (return-type "guint")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-quark-list.h

(define-function gda_quark_list_new_from_string
  (c-name "gda_quark_list_new_from_string")
  (return-type "GdaQuarkList*")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method free
  (of-object "GdaQuarkList")
  (c-name "gda_quark_list_free")
  (return-type "none")
)

(define-method add_from_string
  (of-object "GdaQuarkList")
  (c-name "gda_quark_list_add_from_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "string")
    '("gboolean" "cleanup")
  )
)

(define-method find
  (of-object "GdaQuarkList")
  (c-name "gda_quark_list_find")
  (return-type "const-gchar*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method remove
  (of-object "GdaQuarkList")
  (c-name "gda_quark_list_remove")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-row.h

(define-function gda_row_new_from_list
  (c-name "gda_row_new_from_list")
  (return-type "GdaRow*")
  (parameters
    '("GdaDataModel*" "model")
    '("const-GList*" "values")
  )
)

(define-method free
  (of-object "GdaRow")
  (c-name "gda_row_free")
  (return-type "none")
)

(define-method get_model
  (of-object "GdaRow")
  (c-name "gda_row_get_model")
  (return-type "GdaDataModel*")
)

(define-method get_number
  (of-object "GdaRow")
  (c-name "gda_row_get_number")
  (return-type "gint")
)

(define-method set_number
  (of-object "GdaRow")
  (c-name "gda_row_set_number")
  (return-type "none")
  (parameters
    '("gint" "number")
  )
)

(define-method get_id
  (of-object "GdaRow")
  (c-name "gda_row_get_id")
  (return-type "const-gchar*")
)

(define-method set_id
  (of-object "GdaRow")
  (c-name "gda_row_set_id")
  (return-type "none")
  (parameters
    '("const-gchar*" "id")
  )
)

(define-method get_value
  (of-object "GdaRow")
  (c-name "gda_row_get_value")
  (return-type "const-GdaValue*")
  (parameters
    '("gint" "num")
  )
)

(define-method get_length
  (of-object "GdaRow")
  (c-name "gda_row_get_length")
  (return-type "gint")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-select.h

(define-function gda_select_get_type
  (c-name "gda_select_get_type")
  (return-type "GType")
)

(define-function gda_select_new
  (c-name "gda_select_new")
  (is-constructor-of "GdaSelect")
  (return-type "GdaDataModel*")
)

(define-method add_source
  (of-object "GdaSelect")
  (c-name "gda_select_add_source")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
    '("const-GdaDataModel*" "source")
  )
)

(define-method set_sql
  (of-object "GdaSelect")
  (c-name "gda_select_set_sql")
  (return-type "none")
  (parameters
    '("const-gchar*" "sql")
  )
)

(define-method run
  (of-object "GdaSelect")
  (c-name "gda_select_run")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-server-provider.h

(define-function gda_server_provider_get_type
  (c-name "gda_server_provider_get_type")
  (return-type "GType")
)

(define-method get_version
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_get_version")
  (return-type "const-gchar*")
)

(define-method open_connection
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_open_connection")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaQuarkList*" "params")
    '("const-gchar*" "username")
    '("const-gchar*" "password")
  )
)

(define-method close_connection
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_close_connection")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
  )
)

(define-method get_server_version
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_get_server_version")
  (return-type "const-gchar*")
  (parameters
    '("GdaConnection*" "cnc")
  )
)

(define-method get_database
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_get_database")
  (return-type "const-gchar*")
  (parameters
    '("GdaConnection*" "cnc")
  )
)

(define-method change_database
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_change_database")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("const-gchar*" "name")
  )
)

(define-method create_database
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_create_database")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("const-gchar*" "name")
  )
)

(define-method drop_database
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_drop_database")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("const-gchar*" "name")
  )
)

(define-method execute_command
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_execute_command")
  (return-type "GList*")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaCommand*" "cmd")
    '("GdaParameterList*" "params")
  )
)

(define-method begin_transaction
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_begin_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaTransaction*" "xaction")
  )
)

(define-method commit_transaction
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_commit_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaTransaction*" "xaction")
  )
)

(define-method rollback_transaction
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_rollback_transaction")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaTransaction*" "xaction")
  )
)

(define-method supports
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_supports")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaConnectionFeature" "feature")
  )
)

(define-method get_schema
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_get_schema")
  (return-type "GdaDataModel*")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaConnectionSchema" "schema")
    '("GdaParameterList*" "params")
  )
)

(define-method create_blob
  (of-object "GdaServerProvider")
  (c-name "gda_server_provider_create_blob")
  (return-type "gboolean")
  (parameters
    '("GdaConnection*" "cnc")
    '("GdaBlob*" "blob")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-table.h

(define-function gda_table_get_type
  (c-name "gda_table_get_type")
  (return-type "GType")
)

(define-function gda_table_new
  (c-name "gda_table_new")
  (is-constructor-of "GdaTable")
  (return-type "GdaTable*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-function gda_table_new_from_model
  (c-name "gda_table_new_from_model")
  (return-type "GdaTable*")
  (parameters
    '("const-gchar*" "name")
    '("const-GdaDataModel*" "model")
    '("gboolean" "add_data")
  )
)

(define-method get_name
  (of-object "GdaTable")
  (c-name "gda_table_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "GdaTable")
  (c-name "gda_table_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method add_field
  (of-object "GdaTable")
  (c-name "gda_table_add_field")
  (return-type "none")
  (parameters
    '("const-GdaFieldAttributes*" "fa")
  )
)

(define-method add_data_from_model
  (of-object "GdaTable")
  (c-name "gda_table_add_data_from_model")
  (return-type "none")
  (parameters
    '("const-GdaDataModel*" "model")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-transaction.h

(define-function gda_transaction_get_type
  (c-name "gda_transaction_get_type")
  (return-type "GType")
)

(define-function gda_transaction_new
  (c-name "gda_transaction_new")
  (is-constructor-of "GdaTransaction")
  (return-type "GdaTransaction*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_isolation_level
  (of-object "GdaTransaction")
  (c-name "gda_transaction_get_isolation_level")
  (return-type "GdaTransactionIsolation")
)

(define-method set_isolation_level
  (of-object "GdaTransaction")
  (c-name "gda_transaction_set_isolation_level")
  (return-type "none")
  (parameters
    '("GdaTransactionIsolation" "level")
  )
)

(define-method get_name
  (of-object "GdaTransaction")
  (c-name "gda_transaction_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "GdaTransaction")
  (c-name "gda_transaction_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-util.h

(define-function gda_type_from_string
  (c-name "gda_type_from_string")
  (return-type "GdaValueType")
  (parameters
    '("const-gchar*" "str")
  )
)

(define-function gda_string_hash_to_list
  (c-name "gda_string_hash_to_list")
  (return-type "GList*")
  (parameters
    '("GHashTable*" "hash_table")
  )
)

(define-function gda_sql_replace_placeholders
  (c-name "gda_sql_replace_placeholders")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "sql")
    '("GdaParameterList*" "params")
  )
)

(define-function gda_file_load
  (c-name "gda_file_load")
  (return-type "gchar*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function gda_file_save
  (c-name "gda_file_save")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
    '("const-gchar*" "buffer")
    '("gint" "len")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-value.h

(define-function gda_value_new_null
  (c-name "gda_value_new_null")
  (return-type "GdaValue*")
)

(define-function gda_value_new_bigint
  (c-name "gda_value_new_bigint")
  (return-type "GdaValue*")
  (parameters
    '("gint64" "val")
  )
)

(define-function gda_value_new_biguint
  (c-name "gda_value_new_biguint")
  (return-type "GdaValue*")
  (parameters
    '("guint64" "val")
  )
)

(define-function gda_value_new_binary
  (c-name "gda_value_new_binary")
  (return-type "GdaValue*")
  (parameters
    '("gconstpointer" "val")
    '("glong" "size")
  )
)

(define-function gda_value_new_blob
  (c-name "gda_value_new_blob")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaBlob*" "val")
  )
)

(define-function gda_value_new_boolean
  (c-name "gda_value_new_boolean")
  (return-type "GdaValue*")
  (parameters
    '("gboolean" "val")
  )
)

(define-function gda_value_new_date
  (c-name "gda_value_new_date")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaDate*" "val")
  )
)

(define-function gda_value_new_double
  (c-name "gda_value_new_double")
  (return-type "GdaValue*")
  (parameters
    '("gdouble" "val")
  )
)

(define-function gda_value_new_geometric_point
  (c-name "gda_value_new_geometric_point")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaGeometricPoint*" "val")
  )
)

(define-function gda_value_new_gobject
  (c-name "gda_value_new_gobject")
  (return-type "GdaValue*")
  (parameters
    '("const-GObject*" "val")
  )
)

(define-function gda_value_new_integer
  (c-name "gda_value_new_integer")
  (return-type "GdaValue*")
  (parameters
    '("gint" "val")
  )
)

(define-function gda_value_new_list
  (c-name "gda_value_new_list")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaValueList*" "val")
  )
)

(define-function gda_value_new_money
  (c-name "gda_value_new_money")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaMoney*" "val")
  )
)

(define-function gda_value_new_numeric
  (c-name "gda_value_new_numeric")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaNumeric*" "val")
  )
)

(define-function gda_value_new_single
  (c-name "gda_value_new_single")
  (return-type "GdaValue*")
  (parameters
    '("gfloat" "val")
  )
)

(define-function gda_value_new_smallint
  (c-name "gda_value_new_smallint")
  (return-type "GdaValue*")
  (parameters
    '("gshort" "val")
  )
)

(define-function gda_value_new_smalluint
  (c-name "gda_value_new_smalluint")
  (return-type "GdaValue*")
  (parameters
    '("gushort" "val")
  )
)

(define-function gda_value_new_string
  (c-name "gda_value_new_string")
  (return-type "GdaValue*")
  (parameters
    '("const-gchar*" "val")
  )
)

(define-function gda_value_new_time
  (c-name "gda_value_new_time")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaTime*" "val")
  )
)

(define-function gda_value_new_timestamp
  (c-name "gda_value_new_timestamp")
  (return-type "GdaValue*")
  (parameters
    '("const-GdaTimestamp*" "val")
  )
)

(define-function gda_value_new_timestamp_from_timet
  (c-name "gda_value_new_timestamp_from_timet")
  (return-type "GdaValue*")
  (parameters
    '("time_t" "val")
  )
)

(define-function gda_value_new_tinyint
  (c-name "gda_value_new_tinyint")
  (return-type "GdaValue*")
  (parameters
    '("gchar" "val")
  )
)

(define-function gda_value_new_tinyuint
  (c-name "gda_value_new_tinyuint")
  (return-type "GdaValue*")
  (parameters
    '("guchar" "val")
  )
)

(define-function gda_value_new_type
  (c-name "gda_value_new_type")
  (return-type "GdaValue*")
  (parameters
    '("GdaValueType" "val")
  )
)

(define-function gda_value_new_uinteger
  (c-name "gda_value_new_uinteger")
  (return-type "GdaValue*")
  (parameters
    '("guint" "val")
  )
)

(define-function gda_value_new_from_string
  (c-name "gda_value_new_from_string")
  (return-type "GdaValue*")
  (parameters
    '("const-gchar*" "as_string")
    '("GdaValueType" "type")
  )
)

(define-function gda_value_new_from_xml
  (c-name "gda_value_new_from_xml")
  (return-type "GdaValue*")
  (parameters
    '("const-xmlNodePtr" "node")
  )
)

(define-method free
  (of-object "GdaValue")
  (c-name "gda_value_free")
  (return-type "none")
)

(define-method get_type
  (of-object "GdaValue")
  (c-name "gda_value_get_type")
  (return-type "GdaValueType")
)

(define-method is_null
  (of-object "GdaValue")
  (c-name "gda_value_is_null")
  (return-type "gboolean")
)

(define-method is_number
  (of-object "GdaValue")
  (c-name "gda_value_is_number")
  (return-type "gboolean")
)

(define-method copy
  (of-object "GdaValue")
  (c-name "gda_value_copy")
  (return-type "GdaValue*")
)

(define-method get_bigint
  (of-object "GdaValue")
  (c-name "gda_value_get_bigint")
  (return-type "gint64")
)

(define-method set_bigint
  (of-object "GdaValue")
  (c-name "gda_value_set_bigint")
  (return-type "none")
  (parameters
    '("gint64" "val")
  )
)

(define-method get_biguint
  (of-object "GdaValue")
  (c-name "gda_value_get_biguint")
  (return-type "guint64")
)

(define-method set_biguint
  (of-object "GdaValue")
  (c-name "gda_value_set_biguint")
  (return-type "none")
  (parameters
    '("guint64" "val")
  )
)

(define-method get_binary
  (of-object "GdaValue")
  (c-name "gda_value_get_binary")
  (return-type "const-gpointer")
  (parameters
    '("glong*" "size")
  )
)

(define-method set_binary
  (of-object "GdaValue")
  (c-name "gda_value_set_binary")
  (return-type "none")
  (parameters
    '("gconstpointer" "val")
    '("glong" "size")
  )
)

(define-method get_blob
  (of-object "GdaValue")
  (c-name "gda_value_get_blob")
  (return-type "const-GdaBlob*")
)

(define-method set_blob
  (of-object "GdaValue")
  (c-name "gda_value_set_blob")
  (return-type "none")
  (parameters
    '("const-GdaBlob*" "val")
  )
)

(define-method get_boolean
  (of-object "GdaValue")
  (c-name "gda_value_get_boolean")
  (return-type "gboolean")
)

(define-method set_boolean
  (of-object "GdaValue")
  (c-name "gda_value_set_boolean")
  (return-type "none")
  (parameters
    '("gboolean" "val")
  )
)

(define-method get_date
  (of-object "GdaValue")
  (c-name "gda_value_get_date")
  (return-type "const-GdaDate*")
)

(define-method set_date
  (of-object "GdaValue")
  (c-name "gda_value_set_date")
  (return-type "none")
  (parameters
    '("const-GdaDate*" "val")
  )
)

(define-method get_double
  (of-object "GdaValue")
  (c-name "gda_value_get_double")
  (return-type "gdouble")
)

(define-method set_double
  (of-object "GdaValue")
  (c-name "gda_value_set_double")
  (return-type "none")
  (parameters
    '("gdouble" "val")
  )
)

(define-method get_geometric_point
  (of-object "GdaValue")
  (c-name "gda_value_get_geometric_point")
  (return-type "const-GdaGeometricPoint*")
)

(define-method set_geometric_point
  (of-object "GdaValue")
  (c-name "gda_value_set_geometric_point")
  (return-type "none")
  (parameters
    '("const-GdaGeometricPoint*" "val")
  )
)

(define-method get_gobject
  (of-object "GdaValue")
  (c-name "gda_value_get_gobject")
  (return-type "const-GObject*")
)

(define-method set_gobject
  (of-object "GdaValue")
  (c-name "gda_value_set_gobject")
  (return-type "none")
  (parameters
    '("const-GObject*" "val")
  )
)

(define-method get_integer
  (of-object "GdaValue")
  (c-name "gda_value_get_integer")
  (return-type "gint")
)

(define-method set_integer
  (of-object "GdaValue")
  (c-name "gda_value_set_integer")
  (return-type "none")
  (parameters
    '("gint" "val")
  )
)

(define-method get_list
  (of-object "GdaValue")
  (c-name "gda_value_get_list")
  (return-type "const-GdaValueList*")
)

(define-method set_list
  (of-object "GdaValue")
  (c-name "gda_value_set_list")
  (return-type "none")
  (parameters
    '("const-GdaValueList*" "val")
  )
)

(define-method set_null
  (of-object "GdaValue")
  (c-name "gda_value_set_null")
  (return-type "none")
)

(define-method get_money
  (of-object "GdaValue")
  (c-name "gda_value_get_money")
  (return-type "const-GdaMoney*")
)

(define-method set_money
  (of-object "GdaValue")
  (c-name "gda_value_set_money")
  (return-type "none")
  (parameters
    '("const-GdaMoney*" "val")
  )
)

(define-method get_numeric
  (of-object "GdaValue")
  (c-name "gda_value_get_numeric")
  (return-type "const-GdaNumeric*")
)

(define-method set_numeric
  (of-object "GdaValue")
  (c-name "gda_value_set_numeric")
  (return-type "none")
  (parameters
    '("const-GdaNumeric*" "val")
  )
)

(define-method get_single
  (of-object "GdaValue")
  (c-name "gda_value_get_single")
  (return-type "gfloat")
)

(define-method set_single
  (of-object "GdaValue")
  (c-name "gda_value_set_single")
  (return-type "none")
  (parameters
    '("gfloat" "val")
  )
)

(define-method get_smallint
  (of-object "GdaValue")
  (c-name "gda_value_get_smallint")
  (return-type "gshort")
)

(define-method set_smallint
  (of-object "GdaValue")
  (c-name "gda_value_set_smallint")
  (return-type "none")
  (parameters
    '("gshort" "val")
  )
)

(define-method get_smalluint
  (of-object "GdaValue")
  (c-name "gda_value_get_smalluint")
  (return-type "gushort")
)

(define-method set_smalluint
  (of-object "GdaValue")
  (c-name "gda_value_set_smalluint")
  (return-type "none")
  (parameters
    '("gushort" "val")
  )
)

(define-method get_string
  (of-object "GdaValue")
  (c-name "gda_value_get_string")
  (return-type "const-gchar*")
)

(define-method set_string
  (of-object "GdaValue")
  (c-name "gda_value_set_string")
  (return-type "none")
  (parameters
    '("const-gchar*" "val")
  )
)

(define-method get_time
  (of-object "GdaValue")
  (c-name "gda_value_get_time")
  (return-type "const-GdaTime*")
)

(define-method set_time
  (of-object "GdaValue")
  (c-name "gda_value_set_time")
  (return-type "none")
  (parameters
    '("const-GdaTime*" "val")
  )
)

(define-method get_timestamp
  (of-object "GdaValue")
  (c-name "gda_value_get_timestamp")
  (return-type "const-GdaTimestamp*")
)

(define-method set_timestamp
  (of-object "GdaValue")
  (c-name "gda_value_set_timestamp")
  (return-type "none")
  (parameters
    '("const-GdaTimestamp*" "val")
  )
)

(define-method get_tinyint
  (of-object "GdaValue")
  (c-name "gda_value_get_tinyint")
  (return-type "gchar")
)

(define-method set_tinyint
  (of-object "GdaValue")
  (c-name "gda_value_set_tinyint")
  (return-type "none")
  (parameters
    '("gchar" "val")
  )
)

(define-method get_tinyuint
  (of-object "GdaValue")
  (c-name "gda_value_get_tinyuint")
  (return-type "guchar")
)

(define-method set_tinyuint
  (of-object "GdaValue")
  (c-name "gda_value_set_tinyuint")
  (return-type "none")
  (parameters
    '("guchar" "val")
  )
)

(define-method get_uinteger
  (of-object "GdaValue")
  (c-name "gda_value_get_uinteger")
  (return-type "guint")
)

(define-method set_uinteger
  (of-object "GdaValue")
  (c-name "gda_value_set_uinteger")
  (return-type "none")
  (parameters
    '("guint" "val")
  )
)

(define-method get_vtype
  (of-object "GdaValue")
  (c-name "gda_value_get_vtype")
  (return-type "GdaValueType")
)

(define-method set_vtype
  (of-object "GdaValue")
  (c-name "gda_value_set_vtype")
  (return-type "none")
  (parameters
    '("GdaValueType" "type")
  )
)

(define-method set_from_string
  (of-object "GdaValue")
  (c-name "gda_value_set_from_string")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "as_string")
    '("GdaValueType" "type")
  )
)

(define-method set_from_value
  (of-object "GdaValue")
  (c-name "gda_value_set_from_value")
  (return-type "gboolean")
  (parameters
    '("const-GdaValue*" "from")
  )
)

(define-method compare
  (of-object "GdaValue")
  (c-name "gda_value_compare")
  (return-type "gint")
  (parameters
    '("const-GdaValue*" "value2")
  )
)

(define-method stringify
  (of-object "GdaValue")
  (c-name "gda_value_stringify")
  (return-type "gchar*")
)

(define-method to_xml
  (of-object "GdaValue")
  (c-name "gda_value_to_xml")
  (return-type "xmlNodePtr")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xml-connection.h

(define-function gda_xml_connection_get_type
  (c-name "gda_xml_connection_get_type")
  (return-type "GType")
)

(define-function gda_xml_connection_new
  (c-name "gda_xml_connection_new")
  (is-constructor-of "GdaXmlConnection")
  (return-type "GdaXmlConnection*")
)

(define-function gda_xml_connection_new_from_file
  (c-name "gda_xml_connection_new_from_file")
  (return-type "GdaXmlConnection*")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-function gda_xml_connection_new_from_string
  (c-name "gda_xml_connection_new_from_string")
  (return-type "GdaXmlConnection*")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method set_from_file
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_set_from_file")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "filename")
  )
)

(define-method set_from_string
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_set_from_string")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "string")
  )
)

(define-method get_dsn
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_get_dsn")
  (return-type "const-gchar*")
)

(define-method set_dsn
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_set_dsn")
  (return-type "none")
  (parameters
    '("const-gchar*" "dsn")
  )
)

(define-method get_username
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_get_username")
  (return-type "const-gchar*")
)

(define-method set_username
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_set_username")
  (return-type "none")
  (parameters
    '("const-gchar*" "username")
  )
)

(define-method get_password
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_get_password")
  (return-type "const-gchar*")
)

(define-method set_password
  (of-object "GdaXmlConnection")
  (c-name "gda_xml_connection_set_password")
  (return-type "none")
  (parameters
    '("const-gchar*" "password")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xml-database.h

(define-function gda_xml_database_get_type
  (c-name "gda_xml_database_get_type")
  (return-type "GType")
)

(define-function gda_xml_database_new
  (c-name "gda_xml_database_new")
  (is-constructor-of "GdaXmlDatabase")
  (return-type "GdaXmlDatabase*")
)

(define-function gda_xml_database_new_from_uri
  (c-name "gda_xml_database_new_from_uri")
  (return-type "GdaXmlDatabase*")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method get_name
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_get_name")
  (return-type "const-gchar*")
)

(define-method set_name
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_user_version
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_get_user_version")
  (return-type "const-gchar*")
)

(define-method set_user_version
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_set_user_version")
  (return-type "none")
  (parameters
    '("const-gchar*" "user_version")
  )
)

(define-method get_version
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_get_version")
  (return-type "const-gchar*")
)

(define-method get_uri
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_get_uri")
  (return-type "const-gchar*")
)

(define-method set_uri
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_set_uri")
  (return-type "none")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method changed
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_changed")
  (return-type "none")
)

(define-method reload
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_reload")
  (return-type "none")
)

(define-method save
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_save")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method to_string
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_to_string")
  (return-type "gchar*")
)

(define-method get_tables
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_get_tables")
  (return-type "GList*")
)

(define-function gda_xml_database_free_table_list
  (c-name "gda_xml_database_free_table_list")
  (return-type "none")
  (parameters
    '("GList*" "list")
  )
)

(define-method find_table
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_find_table")
  (return-type "GdaTable*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method new_table
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_new_table")
  (return-type "GdaTable*")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method new_table_from_model
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_new_table_from_model")
  (return-type "GdaTable*")
  (parameters
    '("const-gchar*" "name")
    '("const-GdaDataModel*" "model")
    '("gboolean" "add_data")
  )
)

(define-method new_table_from_node
  (of-object "GdaXmlDatabase")
  (c-name "gda_xml_database_new_table_from_node")
  (return-type "GdaTable*")
  (parameters
    '("xmlNodePtr" "xmlnode")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xml-document.h

(define-function gda_xml_document_get_type
  (c-name "gda_xml_document_get_type")
  (return-type "GType")
)

(define-function gda_xml_document_new
  (c-name "gda_xml_document_new")
  (is-constructor-of "GdaXmlDocument")
  (return-type "GdaXmlDocument*")
  (parameters
    '("const-gchar*" "root_doc")
  )
)

(define-method construct
  (of-object "GdaXmlDocument")
  (c-name "gda_xml_document_construct")
  (return-type "none")
  (parameters
    '("const-gchar*" "root_doc")
  )
)

(define-method get_compress_mode
  (of-object "GdaXmlDocument")
  (c-name "gda_xml_document_get_compress_mode")
  (return-type "gint")
)

(define-method set_compress_mode
  (of-object "GdaXmlDocument")
  (c-name "gda_xml_document_set_compress_mode")
  (return-type "none")
  (parameters
    '("gint" "mode")
  )
)

(define-method to_file
  (of-object "GdaXmlDocument")
  (c-name "gda_xml_document_to_file")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
  )
)

(define-method stringify
  (of-object "GdaXmlDocument")
  (c-name "gda_xml_document_stringify")
  (return-type "gchar*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-atom.h

(define-function gda_xql_atom_get_type
  (c-name "gda_xql_atom_get_type")
  (return-type "GType")
)

(define-function gda_xql_atom_new
  (c-name "gda_xql_atom_new")
  (is-constructor-of "GdaXqlAtom")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "tag")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-bin.h

(define-function gda_xql_bin_get_type
  (c-name "gda_xql_bin_get_type")
  (return-type "GType")
)

(define-function gda_xql_bin_new
  (c-name "gda_xql_bin_new")
  (is-constructor-of "GdaXqlBin")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "tag")
    '("gchar*" "sqlfmt")
    '("gchar*" "sqlop")
  )
)

(define-function gda_xql_bin_new_with_data
  (c-name "gda_xql_bin_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "tag")
    '("gchar*" "sqlfmt")
    '("gchar*" "sqlop")
    '("GdaXqlItem*" "child")
  )
)

(define-method get_child
  (of-object "GdaXqlBin")
  (c-name "gda_xql_bin_get_child")
  (return-type "GdaXqlItem*")
)

(define-method set_child
  (of-object "GdaXqlBin")
  (c-name "gda_xql_bin_set_child")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "item")
  )
)

(define-function gda_xql_bin_new_union
  (c-name "gda_xql_bin_new_union")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_unionall
  (c-name "gda_xql_bin_new_unionall")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_intersect
  (c-name "gda_xql_bin_new_intersect")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_minus
  (c-name "gda_xql_bin_new_minus")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_where
  (c-name "gda_xql_bin_new_where")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_where_with_data
  (c-name "gda_xql_bin_new_where_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "data")
  )
)

(define-function gda_xql_bin_new_having
  (c-name "gda_xql_bin_new_having")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_having_with_data
  (c-name "gda_xql_bin_new_having_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "data")
  )
)

(define-function gda_xql_bin_new_on
  (c-name "gda_xql_bin_new_on")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_not
  (c-name "gda_xql_bin_new_not")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_not_with_data
  (c-name "gda_xql_bin_new_not_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "data")
  )
)

(define-function gda_xql_bin_new_exists
  (c-name "gda_xql_bin_new_exists")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_null
  (c-name "gda_xql_bin_new_null")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_bin_new_null_with_data
  (c-name "gda_xql_bin_new_null_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "data")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-column.h

(define-function gda_xql_column_get_type
  (c-name "gda_xql_column_get_type")
  (return-type "GType")
)

(define-function gda_xql_column_new
  (c-name "gda_xql_column_new")
  (is-constructor-of "GdaXqlColumn")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_column_new_with_data
  (c-name "gda_xql_column_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gint" "num")
    '("gboolean" "asc")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-const.h

(define-function gda_xql_const_get_type
  (c-name "gda_xql_const_get_type")
  (return-type "GType")
)

(define-function gda_xql_const_new
  (c-name "gda_xql_const_new")
  (is-constructor-of "GdaXqlConst")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_const_new_with_data
  (c-name "gda_xql_const_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "value")
    '("gchar*" "alias")
    '("gchar*" "type")
    '("gchar*" "null")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-delete.h

(define-function gda_xql_delete_get_type
  (c-name "gda_xql_delete_get_type")
  (return-type "GType")
)

(define-function gda_xql_delete_new
  (c-name "gda_xql_delete_new")
  (is-constructor-of "GdaXqlDelete")
  (return-type "GdaXqlItem*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-dml.h

(define-function gda_xql_dml_get_type
  (c-name "gda_xql_dml_get_type")
  (return-type "GType")
)

(define-method add_target_from_text
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_target_from_text")
  (return-type "gchar*")
  (parameters
    '("gchar*" "name")
    '("GdaXqlItem*" "join")
  )
)

(define-method add_field_from_text
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_field_from_text")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "id")
    '("gchar*" "name")
    '("gchar*" "alias")
    '("gboolean" "group")
  )
)

(define-method add_const_from_text
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_const_from_text")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "value")
    '("gchar*" "type")
    '("gboolean" "null")
  )
)

(define-method add_func
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_func")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "item")
  )
)

(define-method add_query
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_query")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "item")
  )
)

(define-method add_row_condition
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_row_condition")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "cond")
    '("gchar*" "type")
  )
)

(define-method add_group_condition
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_group_condition")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "cond")
    '("gchar*" "type")
  )
)

(define-method add_order
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_order")
  (return-type "none")
  (parameters
    '("gint" "column")
    '("gboolean" "asc")
  )
)

(define-method add_set
  (of-object "GdaXqlDml")
  (c-name "gda_xql_dml_add_set")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "item")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-dual.h

(define-function gda_xql_dual_get_type
  (c-name "gda_xql_dual_get_type")
  (return-type "GType")
)

(define-function gda_xql_dual_new
  (c-name "gda_xql_dual_new")
  (is-constructor-of "GdaXqlDual")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "tag")
    '("gchar*" "sqlfmt")
    '("gchar*" "sqlop")
  )
)

(define-function gda_xql_dual_new_with_data
  (c-name "gda_xql_dual_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "tag")
    '("gchar*" "sqlfmt")
    '("gchar*" "sqlop")
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-method get_left
  (of-object "GdaXqlDual")
  (c-name "gda_xql_dual_get_left")
  (return-type "GdaXqlItem*")
)

(define-method get_right
  (of-object "GdaXqlDual")
  (c-name "gda_xql_dual_get_right")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_eq
  (c-name "gda_xql_dual_new_eq")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_eq_with_data
  (c-name "gda_xql_dual_new_eq_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_ne
  (c-name "gda_xql_dual_new_ne")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_ne_with_data
  (c-name "gda_xql_dual_new_ne_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_lt
  (c-name "gda_xql_dual_new_lt")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_lt_with_data
  (c-name "gda_xql_dual_new_lt_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_le
  (c-name "gda_xql_dual_new_le")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_le_with_data
  (c-name "gda_xql_dual_new_le_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_gt
  (c-name "gda_xql_dual_new_gt")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_gt_with_data
  (c-name "gda_xql_dual_new_gt_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_ge
  (c-name "gda_xql_dual_new_ge")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_ge_with_data
  (c-name "gda_xql_dual_new_ge_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_like
  (c-name "gda_xql_dual_new_like")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_like_with_data
  (c-name "gda_xql_dual_new_like_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_in
  (c-name "gda_xql_dual_new_in")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_in_with_data
  (c-name "gda_xql_dual_new_in_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)

(define-function gda_xql_dual_new_set
  (c-name "gda_xql_dual_new_set")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_dual_new_set_with_data
  (c-name "gda_xql_dual_new_set_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "left")
    '("GdaXqlItem*" "right")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-field.h

(define-function gda_xql_field_get_type
  (c-name "gda_xql_field_get_type")
  (return-type "GType")
)

(define-function gda_xql_field_new
  (c-name "gda_xql_field_new")
  (is-constructor-of "GdaXqlField")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_field_new_with_data
  (c-name "gda_xql_field_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "source")
    '("gchar*" "name")
    '("gchar*" "alias")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-func.h

(define-function gda_xql_func_get_type
  (c-name "gda_xql_func_get_type")
  (return-type "GType")
)

(define-function gda_xql_func_new
  (c-name "gda_xql_func_new")
  (is-constructor-of "GdaXqlFunc")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_func_new_with_data
  (c-name "gda_xql_func_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "name")
    '("gchar*" "alias")
    '("gchar*" "aggregate")
  )
)

(define-method add_const_from_text
  (of-object "GdaXqlFunc")
  (c-name "gda_xql_func_add_const_from_text")
  (return-type "none")
  (parameters
    '("gchar*" "value")
    '("gchar*" "type")
    '("gchar*" "null")
  )
)

(define-method add_field_from_text
  (of-object "GdaXqlFunc")
  (c-name "gda_xql_func_add_field_from_text")
  (return-type "none")
  (parameters
    '("gchar*" "id")
    '("gchar*" "name")
    '("gchar*" "alias")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-insert.h

(define-function gda_xql_insert_get_type
  (c-name "gda_xql_insert_get_type")
  (return-type "GType")
)

(define-function gda_xql_insert_new
  (c-name "gda_xql_insert_new")
  (is-constructor-of "GdaXqlInsert")
  (return-type "GdaXqlItem*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-item.h

(define-function gda_xql_item_get_type
  (c-name "gda_xql_item_get_type")
  (return-type "GType")
)

(define-method set_attrib
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_set_attrib")
  (return-type "none")
  (parameters
    '("gchar*" "attrib")
    '("gchar*" "value")
  )
)

(define-method get_parent
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_get_parent")
  (return-type "GdaXqlItem*")
)

(define-method set_parent
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_set_parent")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "parent")
  )
)

(define-method get_attrib
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_get_attrib")
  (return-type "gchar*")
  (parameters
    '("gchar*" "attrib")
  )
)

(define-method to_dom
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_to_dom")
  (return-type "xmlNode*")
  (parameters
    '("xmlNode*" "parent")
  )
)

(define-method add
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_add")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "child")
  )
)

(define-method set_tag
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_set_tag")
  (return-type "none")
  (parameters
    '("gchar*" "tag")
  )
)

(define-method get_tag
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_get_tag")
  (return-type "gchar*")
)

(define-method find_root
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_find_root")
  (return-type "GdaXqlItem*")
)

(define-method find_id
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_find_id")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "id")
  )
)

(define-method find_ref
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_find_ref")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "ref")
  )
)

(define-method add_id
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_add_id")
  (return-type "none")
  (parameters
    '("gchar*" "id")
  )
)

(define-method add_ref
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_add_ref")
  (return-type "none")
  (parameters
    '("gchar*" "ref")
  )
)

(define-method get_ref
  (of-object "GdaXqlItem")
  (c-name "gda_xql_item_get_ref")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "ref")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-join.h

(define-function gda_xql_join_get_type
  (c-name "gda_xql_join_get_type")
  (return-type "GType")
)

(define-function gda_xql_join_new
  (c-name "gda_xql_join_new")
  (is-constructor-of "GdaXqlJoin")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_join_new_with_data
  (c-name "gda_xql_join_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "target")
    '("GdaXqlItem*" "cond")
    '("gchar*" "type")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-list.h

(define-function gda_xql_list_get_type
  (c-name "gda_xql_list_get_type")
  (return-type "GType")
)

(define-function gda_xql_list_new
  (c-name "gda_xql_list_new")
  (is-constructor-of "GdaXqlList")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "tag")
  )
)

(define-function gda_xql_list_unref_list
  (c-name "gda_xql_list_unref_list")
  (return-type "none")
  (parameters
    '("GSList*" "list")
  )
)

(define-function gda_xql_list_new_setlist
  (c-name "gda_xql_list_new_setlist")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_sourcelist
  (c-name "gda_xql_list_new_sourcelist")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_targetlist
  (c-name "gda_xql_list_new_targetlist")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_order
  (c-name "gda_xql_list_new_order")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_dest
  (c-name "gda_xql_list_new_dest")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_arglist
  (c-name "gda_xql_list_new_arglist")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_valuelist
  (c-name "gda_xql_list_new_valuelist")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_joinlist
  (c-name "gda_xql_list_new_joinlist")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_and
  (c-name "gda_xql_list_new_and")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_or
  (c-name "gda_xql_list_new_or")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_list_new_group
  (c-name "gda_xql_list_new_group")
  (return-type "GdaXqlItem*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-query.h

(define-function gda_xql_query_get_type
  (c-name "gda_xql_query_get_type")
  (return-type "GType")
)

(define-function gda_xql_query_new
  (c-name "gda_xql_query_new")
  (is-constructor-of "GdaXqlQuery")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_query_new_with_data
  (c-name "gda_xql_query_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("GdaXqlItem*" "xqlitem")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-select.h

(define-function gda_xql_select_get_type
  (c-name "gda_xql_select_get_type")
  (return-type "GType")
)

(define-function gda_xql_select_new
  (c-name "gda_xql_select_new")
  (is-constructor-of "GdaXqlSelect")
  (return-type "GdaXqlItem*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-stack.h

(define-function gda_xql_stack_get_type
  (c-name "gda_xql_stack_get_type")
  (return-type "GType")
)

(define-function gda_xql_stack_new
  (c-name "gda_xql_stack_new")
  (is-constructor-of "GdaXqlStack")
  (return-type "GdaXqlStack*")
)

(define-method push
  (of-object "GdaXqlStack")
  (c-name "gda_xql_stack_push")
  (return-type "none")
  (parameters
    '("GdaXqlItem*" "item")
  )
)

(define-method pop
  (of-object "GdaXqlStack")
  (c-name "gda_xql_stack_pop")
  (return-type "GdaXqlItem*")
)

(define-method empty
  (of-object "GdaXqlStack")
  (c-name "gda_xql_stack_empty")
  (return-type "gboolean")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-target.h

(define-function gda_xql_target_get_type
  (c-name "gda_xql_target_get_type")
  (return-type "GType")
)

(define-function gda_xql_target_new
  (c-name "gda_xql_target_new")
  (is-constructor-of "GdaXqlTarget")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_target_new_with_data
  (c-name "gda_xql_target_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "id")
    '("gchar*" "name")
    '("GdaXqlItem*" "join")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-update.h

(define-function gda_xql_update_get_type
  (c-name "gda_xql_update_get_type")
  (return-type "GType")
)

(define-function gda_xql_update_new
  (c-name "gda_xql_update_new")
  (is-constructor-of "GdaXqlUpdate")
  (return-type "GdaXqlItem*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-utils.h

(define-function gda_xql_gensym
  (c-name "gda_xql_gensym")
  (return-type "gchar*")
  (parameters
    '("gchar*" "sym")
  )
)

(define-function gda_xql_destroy_hash_pair
  (c-name "gda_xql_destroy_hash_pair")
  (return-type "gboolean")
  (parameters
    '("gchar*" "key")
    '("gpointer*" "value")
    '("GFreeFunc" "func")
  )
)

(define-function gda_xql_dom_to_xml
  (c-name "gda_xql_dom_to_xml")
  (return-type "gchar*")
  (parameters
    '("xmlNode*" "node")
    '("gboolean" "freedoc")
  )
)

(define-function gda_xql_dom_to_sql
  (c-name "gda_xql_dom_to_sql")
  (return-type "gchar*")
  (parameters
    '("xmlNode*" "node")
    '("gboolean" "freedoc")
  )
)

(define-function gda_xql_new_node
  (c-name "gda_xql_new_node")
  (return-type "xmlNode*")
  (parameters
    '("gchar*" "tag")
    '("xmlNode*" "parNode")
  )
)

(define-function gda_xql_new_attr
  (c-name "gda_xql_new_attr")
  (return-type "none")
  (parameters
    '("gchar*" "key")
    '("gchar*" "value")
    '("xmlNode*" "node")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-value.h

(define-function gda_xql_value_get_type
  (c-name "gda_xql_value_get_type")
  (return-type "GType")
)

(define-function gda_xql_value_new
  (c-name "gda_xql_value_new")
  (is-constructor-of "GdaXqlValue")
  (return-type "GdaXqlItem*")
)

(define-function gda_xql_value_new_with_data
  (c-name "gda_xql_value_new_with_data")
  (return-type "GdaXqlItem*")
  (parameters
    '("gchar*" "id")
  )
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/gda-xql-valueref.h

(define-function gda_xql_valueref_get_type
  (c-name "gda_xql_valueref_get_type")
  (return-type "GType")
)

(define-function gda_xql_valueref_new
  (c-name "gda_xql_valueref_new")
  (is-constructor-of "GdaXqlValueref")
  (return-type "GdaXqlItem*")
)



;; From /home/murrayc/cvs/gnome26/libgda/libgda/libgda.h

(define-function gda_main_run
  (c-name "gda_main_run")
  (return-type "none")
  (parameters
    '("GdaInitFunc" "init_func")
    '("gpointer" "user_data")
  )
)

(define-function gda_main_quit
  (c-name "gda_main_quit")
  (return-type "none")
)


