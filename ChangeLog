4.99.5:

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Fix the --enable-warnings=fatal build.

	* libgda/libgdamm/init.cc: Do not include glibmm.h. It is not necessary.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	init.h: Move the glibmm.h include to the .cc file.

	* libgda/libgdamm/init.[h|cc]: The glibmm.h include does not need to be in 
	the header.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	Add #includes needed with the latest glibmm.

	* libgda/libgdamm/value.cc:
	* libgda/libgdamm/value.h:
	* libgda/src/blobop.hg:
	* libgda/src/holder.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/quarklist.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/sqlexpr.hg:
	* libgda/src/sqlstatement.hg: Add individual includes now that gmmproc does not 
	add #include glibmm.h at the top of every generated header.

2011-10-19  Murray Cumming  <murrayc@murrayc.com>

	m4 conversions: Fixed an incorrect quote, found by Jos√© Alburquerque.

	* tools/m4/convert_libgdamm.m4: See bug #661401

2011-10-10  Murray Cumming  <murrayc@murrayc.com>

	Regenerated enums.

	* libgda/src/libgda_enums.defs: Regenerated with enums.pl. There are 
	some new error codes.

2011-10-10  Murray Cumming  <murrayc@murrayc.com>

	DataModelIter::get_value_at(): Throw an exception sometimes.

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py.
	* libgda/src/datamodeliter.hg: Use the new 
	gda_data_model_iter_get_value_at_e() instead of 
	gda_data_model_iter_get_value_at(). Presumably this lets us catch more 
	problems.
	* libgda/src/holder.hg:
	* libgda/src/row.hg: Ignore some other new methods, with comments.

4.99.4.1:

2011-09-21  Murray Cumming  <murrayc@murrayc.com>

	ServerProvider: Added supports_operation() method overloads.

	* libgda/src/serverprovider.[hg|ccg]: Because some parameters may be NULL.

2011-09-21  Murray Cumming  <murrayc@murrayc.com>
 
	Connection: Add statement_to_sql() method overloads.
    
	* libgda/src/connection.[hg|ccg]: Because some parameters can be NULL.

4.99.4:

2011-09-21  Murray Cumming  <murrayc@murrayc.com>

	Minor documentation improvements.

	* libgda/src/metastore.hg:
	* libgda/src/quarklist.hg:
	* libgda/src/statement.hg: Minor documentation improvements and TODO
	comments.	

2011-09-21  Murray Cumming  <murrayc@murrayc.com>

	Value: operator=(): Check for identical instance.

	* libgda/libgdamm/value.cc: This is generally a good idea in operator=()
	implementations.

2011-09-20  Murray Cumming  <murrayc@murrayc.com>

	Value: operator=(): Check for the identical underlying GValue.

	* libgda/libgdamm/value.cc: Otherwise we unset the gobject, which 
	unsets the src, because it is the same gobject, and then we reject that
	src as invalid.

2011-09-21  Murray Cumming  <murrayc@murrayc.com>

	Value::set_binary(): reinit the type.

	* libgda/libgdamm/value.cc: Call value_reinit(), as we do in other set()
	methods.

4.99.3.1:

2011-07-04  Murray Cumming  <murrayc@murrayc.com>

  Add SQL_OPERATOR_TYPE_ILIKE.
    
	* libgda/src/libgda_enums.defs: This requires libgda from git master.
    
4.99.3:

2011-06-16  Murray Cumming  <murrayc@murrayc.com>

	Adapt to null value changes in libgda.

	* libgda/src/libgda_methods.defs: Regenerated.
	* libgda/libgdamm/value.[h|cc]: Value() constructor: Call the new 
	gda_value_new_null() because libgda no longer uses gtype=0 (invalid) to mean 
  NULL. Addded set_null(), wrapping the new gda_value_set_null() function.

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Adjust the compiler warning flags used with --enable-warnings=fatal.

	* configure.ac: Ignore warnings about long long, to fix the build with 
	g++ 4.5.2. Avoid use of glibmm deprecated API too.

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Remove GLIBMM_EXCEPTIONS_ENABLED ifdefs.

	* libgda/src/*.[hg|ccg]: These ifdefs are no longer useful. They were already
	removed from other projects a while ago.

4.99.0.1:

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Connection: Add new properties.

	* libgda/src/libgda_signals.defs: Regenerated.
	* libgda/src/connection.hg: Added provider, is_wrapper,
	monitor_wrapped_in_mainloop, and events_history_size properties.

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Connection: Ignore private functions.

	* libgda/src/connection.hg: These functions are in gda-connection-private.h
	so they are not public API.

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Connection: Added *_row_into_table() methods.

	* libgda/src/connection.hg: Added insert_row_into_table(),
	update_row_in_table(), and delete_row_in_table().

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Replace a remaining use of ListHandle.

	* libgda/libgdamm/value.h: Remove the ListHandle and SListHandle typedefs.
	* libgda/src/datamodel.hg: get_row_from_values(): Use std::vector
	instead of ListHandle, as already done for other API.

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Connection: Add some methods.

	* libgda/src/connection.[hg|ccg]: Added parse_sql_string(),
	async_statement_execute(), async_fetch_result() and async_cancel().

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Avoid a tarball dependency on mm-common.

	* configure.ac: Require the latest version of mm-common.
	Call MM_CONFIG_DOCTOOL_DIR() to createe, use, and dist a local copy of the
	mm-common scripts.

4.99.0:

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Connection: statement_execute_non_select(): Restore this method.

	* libgda/src/connection.hg: Correct the function name used by
	statement_execute_non_select().

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Use libgda-5.0.

	* configure.ac: Use libgda-5.0 instead of libgda-4.0.
	* libgda/src/libgda_enums.defs: Regenerated.
	* libgda/src/libgda_methods.defs: Regenerated.
	* libgda/libgdamm/value.[h|cc]: Remove API that uses the list type. It was
	apparently removed from the libgda API.
	* libgda/src/connection.hg: Remove an unused enum.
	* libgda/src/serveroperation.ccg: Adapt to renamed functions.

This is the master branch. See the libgdamm-4-2 branch too.

4.1.2:

2011-01-30  Murray Cumming  <murrayc@murrayc.com>

	Use std::vector<> instead of *Handle<> or std::list<>.

	* libgda/src/batch.[hg|ccg]:
	* libgda/src/connection.[hg|ccg]:
	* libgda/src/datacomparator.[hg|ccg]:
	* libgda/src/datamodel.[hg|ccg]:
	* libgda/src/datamodelimport.hg:
	* libgda/src/dataproxy.[hg|ccg]:
	* libgda/src/metastore.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/set.hg:
	* libgda/src/sqlbuilder.[hg|ccg]:
	* libgda/src/statement.[hg|ccg]:
	* libgda/src/xatransaction.[hg|ccg]:
	* tools/m4/convert_libgdamm.m4: Use the new convention that we have just
	started using in gtkmm 3. libgdamm is API/ABI unstable, so we can still make
	big changes like this.

2010-12-09  Murray Cumming  <murrayc@murrayc.com>

	Adapt to gmmproc m4 changes in glibmm.

	* tools/m4/convert.m4: Include convert_glibmm.m4 instead of convert_gtkmm.m4.
	* tools/m4/convert_libgdamm.m4: Avoid use of the __FR2P macro, which does
	not seem to be defined for some reason.

4.1.1:

2010-10-16  Murray Cumming  <murrayc@murrayc.com>

	Small documentation improvements.

	* libgda/src/libgda_docs.xml: Fix a typo that I fixed in libgda too.
	* libgda/src/sqlbuilder.[hg|ccg]: Small docs improvements.
	select_add_target_id(): Use _WRAP_METHOD() for this.
	* libgda/src/sqlexpr.hg: Added some overview documentation.
	* libgda/src/sqlstatement.hg: Added some overview documentation.

2010-10-16  Murray Cumming  <murrayc@murrayc.com>

	Doxyfile.in: Make more like the gtkmm one.

	* docs/reference/Doxyfile.in: Minor unimportant changes, to match gtkmm.

2010-10-16  Murray Cumming  <murrayc@murrayc.com>

	Work around a doxygen crash.

	* libgda/src/sqlparser.hg: Class overview documentation: Instead of
	describing the placeholder syntax, just link to the GdaSqlParser
	documentation. This is unavoidable as there seems to be now way to mention
	/* in a comment. The attempt to use @verbatim@endverbatim to do this does
	not seem to have worked in the past and crashes current versions of doxygen.
	( Doxygen bug https://bugzilla.gnome.org/show_bug.cgi?id=632311 )

2010-10-16  Murray Cumming  <murrayc@murrayc.com>

	Regenerated C documentation.

	* libgda/src/libgda_docs.xml: Regenerated with docextract_to_xml.py.

2010-10-16  Murray Cumming  <murrayc@murrayc.com>

	Added some methods.

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py.
	* libgda/src/connection.hg: Added quote_sql_identifier().
	* libgda/src/dataselect.hg: Added rerun().
	* libgda/src/metastore.hg: Added set_identifiers_style().
	* libgda/src/sqlstatement.hg: Added string_to_type().
	* libgda/src/sqlbuilder.hg: Added some documentation.
	* tools/m4/convert_libgdamm.m4: Mention a new enum.

2010-08-31  Murray Cumming  <murrayc@murrayc.com>

	Added ConfigError and Config::get_provider().

	* libgda/src/config.[hg|ccg]: Add the ConfigError exception, which is
  also thrown by some Connection methods.
  Add get_provider() and use _WRAP_METHOD() for the existing methods instead
  of hand-coding them.

3.99.21:

2010-06-21  Murray Cumming  <murrayc@murrayc.com>

	DataModel: Added the DataModelError exceptions.

	* libgda/src/datamodel.hg: Add this exception that can be thrown by these
	methods.

2010-06-21  Murray Cumming  <murrayc@murrayc.com>

	Fix the examples (check) build.

	* examples/sqlbuilder/main.cc: Adapt to the
	add_field_id()->add_field_value_id() API change.

2010-06-21  Murray Cumming  <murrayc@murrayc.com>

	ServerOperation: set_value_at(): Make this templated.

	* libgda/src/serveroperation.[hg|ccg]: Add set_value_at_as_value() and make
	set_value_at() a templated method, instead of just taking a string.

2010-06-21  Murray Cumming  <murrayc@murrayc.com>

	Add CREATE_USER, ALTER USER and DROP USER server operations.

	* libgda/src/libgda_methods.defs: Regenerate with h2defs.py though the enums
	here are not actually used.
	* libgda/src/libgda_enums.defs: Regenerate with enums.pl, to add the enums
	for the new server operations.

2010-06-15  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: Added add_field_id().

	* libgda/src/sqlbuilder.[hg|ccg]: Added add_field_id().

2010-06-15  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with libgda git master.

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py.
	* libgda/src/sqlbuilder.[hg|ccg]: Use Id instead of guint for the IDs.
	It is just a typedef but it makes things clearer. libgda does this now too.
	Rename add_field_id() to add_field_value_id() and change the implementation
	of similar methods because the C functions were renamed (by me).

3.99.20:

2010-05-20  Murray Cumming  <murrayc@murrayc.com>

	Fixed the build with latest libgda.

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/sqlbuilder.ccg: Adapted now that I have removed the id
	parameters from the C API.

2010-05-17  Murray Cumming  <murrayc@murrayc.com>

    SqlBuilder: Don't pass empty strings to the C functions.

	* libgda/src/sqlbuilder.hg: Make sure that generated methods pass NULL
    for empty strings, because libgda does not always check that strings are
    not empty, though I try to fix that in libgda when I see it.

2010-05-13  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: get_sql_statement(): Fix memory management.

	* libgda/src/sqlbuilder.hg: get_sql_statement(): Take a copy of the C object,
	to avoid a double-free.

2010-05-12  Murray Cumming  <murrayc@murrayc.com>

    SqlBuilder: add_sub_select(), compound_add_sub_select(): Remove steal param.

	* libgda/src/libgda_methods.defs:
	* libgda/src/sqlbuilder.[hg|ccg]: Adapt to my change in libgda, fixing the
    build.

2010-05-12  Murray Cumming  <murrayc@murrayc.com>>

	SqlBuilder: get_sql_statement(): Remove stupid copy_it parameter.

	* libgda/src/libgda_methods.defs:
	* libgda/src/sqlbuilder.hg: Adapt to my change in libgda, fixing the build.

2010-05-12  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: Add select_add_target_id().

	* libgda/src/sqlbuilder.[hg|ccg]: Added select_add_target_id(),
    which _might_ be useful for adding sub-queries as targets, though I
    am checking.

2010-05-11  Murray Cumming  <murrayc@murrayc.com>

    SqlBuilder: Add add_sub_select().

	* libgda/src/sqlbuilder.[hg|ccg]:  Wrap gda_sql_builder_add_sub_select().

2010-05-11  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: Add compound_add_sub_select().

	* libgda/src/sqlbuilder.hg: Wrap gda_sql_builder_compound_add_sub_select().

2010-05-11  Murray Cumming  <murrayc@murrayc.com>

    SqlBuilder: Add get_sql_statement().

	* libgda/src/sqlstatement.[hg|ccg]: Added SqlStatement, wrapping
    GdaSqlStatement.
    * libgda/src/sqlbuilder.hg:  Wrap gda_sql_builder_get_sql_statement().

2010-05-07  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: import_expression(): Remove the id parameter.

	* libgda/src/sqlbuilder.hg: import_expression(): Remove the id parameter.
	We generally don't let the caller specify an ID, though the C API does,
	for no good reason.
	export_expression(): Make this const.

2010-05-07  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: Fix typo in import_expression() name.

	* libgda/src/sqlbuilder.hg: Change import_expressio() to import_expression().

2010-05-06  Murray Cumming  <murrayc@murrayc.com>

   SqlExpr: Add empty().

	* libgda/src/sqlexpr.[hg|ccg]: Added empty() so we can check if it is a
    default empty instance. This makes it more useful.

2010-05-06  Murray Cumming  <murrayc@murrayc.com>

    Added new SqlBuilder methods.

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/sqlexpr.[hg|ccg]: Wrapped GdaSqlExpr as Gda::SqlExpr.
    This needs my change in libgda to register the boxed type.
    * libgda/src/sqlbuilder.hg: select_add_field(): Returns the ID now.
    Added export_expression() and import_expression().

2010-05-04  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm.h: Minor main text improvement.

2010-05-04  Murray Cumming  <murrayc@murrayc.com>

	Value: Added get/set_long().

	* libgda/libgdamm/value.[h|cc]: Added get/set_long().

2010-04-27  David King  <davidk@openismus.com>

	Add main page to Doxygen documentation

	* docs/Makefile.am: Parse libgda/libgdamm.h for Doxygen documentation.
	* libgda/libgdamm.h: Add main page to generated documentation.

2010-04-27  David King  <davidk@Openismus.com>

	Remove Debian packaging

	* debian/*: Remove hopelessly out-of-date Debian packaging.

2010-04-26  Murray Cumming  <murrayc@murrayc.com>

    SqlBuilder: Added select_set_having() and select_group_by().

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/sqlbuilder.hg: Added select_set_having(), select_group_by().

2010-04-09  Armin Burgmeier  <armin@arbur.net>

	SqlBuilder: Make definition and declaration of add_cond() match

	* libgda/src/sqlbuilder.ccg (add_cond): Fix function header signature
	to match the declaration in the header (uint->guint), fixing the
	Windows build.

2010-03-29  Murray Cumming  <murrayc@murrayc.com>

    SqlBuilder: Added select_set_dictinct() and select_sect_limit().

	* libgda/src/libgda_methods.defs: Regenerated
	* libgda/src/sqlbuilder.[hg|ccg]: Added select_set_distinct(),
    select_set_limit(), set_limit_id(), and select_set_distinct().

2010-03-23  Murray Cumming  <murrayc@murrayc.com>

  Fix the build with the latest libgdamm, which slightly broke API and ABI.

	* libgda/src/libgda_enums.defs: Regenerated.
	* libgda/src/sqlbuilder.hg: Adapt the SqlError exception wrapper to mention
	GdaSqlError instead of GdaSqlErrorType.

2010-02-27  Murray Cumming  <murrayc@murrayc-x61>

  Connection: Add statement_execute_non_select_builder(SqlBuilder)

  * libgda/src/connection.[hg|ccg]: Added statement_execute_non_select_builder()
  overloads that take SqlBuilder, to avoid the need to generate a statement
  from a builder.

2010-02-27  Murray Cumming  <murrayc@murrayc.com>

  Connection, SqlBuilder: Add some convenient method overloads.

	* libgda/src/connection.[hg|ccg]: statement_execute_select(statement, params):
	Add an optional model_usage parameter, as already exists on other method
	overloads.
	Added statement_execute_select_builder() to avoid the need to generate a
	statement from a builder.
	* libgda/src/sqlbuilder.[hg|ccg]: Added an add_function() overload that
	takes only one parameter.

2010-02-27  Murray Cumming  <murrayc@murrayc.com>

  SqlBuilder: Add SqlError and fix select_add_target() with no alias.

	* libgda/src/sqlbuilder.[hg|ccg]: Add SqlError to wrap the GdaSqlError
	error domain thrown (but not documented) by SqlBuilder.
	select_add_target(): Avoid passing a "" alias. I have fixed the C
	function in libgda but this makes it safe even when that is not deployed.

3.99.19:

2010-02-25  Murray Cumming  <murrayc@murrayc.com>

	* examples/sqlbuilder/main.cc: Updated for the latest API, hopefully.

2009-12-04  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: select_add_target() now takes a name instead of an ID.

	* libgda/src/libgda_methods.defs: Regenerated
	* libgda/src/sqlbuilder.[hg|ccg]: select_add_target(): Take the
	table name as a string, using the new C function, and give the alias
	a default parameter instead of overloading.

2009-12-02  Murray Cumming  <murrayc@murrayc-desktop>

	SqlBuilder: Make set_field_value() and add_expr() templated.

	* libgda/src/sqlbuilder.[hg|ccg]: set_field_value(): Rename to
	set_field_value_as_value. Rename add_expr() to add_expr_as_value().
	Add templated set_field_value() and add_expr() methods so people
	do not need to manually construct a Value object.

2009-12-01  Murray Cumming  <murrayc@murrayc.com>

	SqlBuilder: Added 2 more methods.

	* libgda/src/sqlbuilder.hg: Added add_field_value() and
	select_add_field().

2009-12-01  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with the latest libgdamm.

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py
	* libgda/src/sqlbuilder.hg: gda_sql_builder_add_field() was renamed to
	gda_sql_builder_add_field_id().

2009-10-25  Murray Cumming  <murrayc@murrayc.com>

  Statement::to_sql(), Connection::statement*(): const corrections.

	* libgda/src/statement.[hg|ccg|: to_sql(): Make the params parameter const.
  * libgda/src/connection.[hg|ccg|: statement_execute*(), statement_to_sql():
  Make the statement and params parameters const.

2009-10-25  Murray Cumming  <murrayc@murrayc.com>

  SqlBuilder: Small const and other improvements.

	* libgda/src/sqlbuilder.[hg|ccg]: add_expr(): Use const ref for the Value
	parameter. Don't use NULL in C++ code.
	add_function(): Use const ref for the ArrayHandle parameter.
	get_statement(): Make this const.
	add_cond_v(): Rename to add_cond().
	select_order_by(): Add default parameter values.

2009-10-05  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/sqlbuilder.ccg: add_expr() should use the DataHandler
	argument when requested

2009-10-01  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/sqlbuilder.hg: Use default arguments for potentially unused
	arguments of add_cond()

	* examples/sqlbuilder/main.cc: Make use of new default argument

2009-10-01  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/sqlbuilder.hg/ccg:
	* libgda/src/libgda_methods.defs:
	Updated GdaSqlBuilder bindings to use new method names from libgda

	All methods now return an automatically generated id which should be stored
	somewhere when it needs to reused. Manual id definition like in the C
	API has been removed.

	* examples/sqlbuilder/main.cc: Updated example to new API

2009-09-30  Johannes Schmid  <jschmid@openismis.com>

	* libgda/src/row.hg:
	* libgda/src/statement.hg:
	Added _IGNORES for provider-only methods
	* examples/sqlbuilder/main.cc:
	Added example for new function API

2009-09-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/libgda_methods.defs:
	* libgda/src/sqlbuilder.hg/ccg:
	Added wrapper for new function API (allow things like MAX() in sql statements)
	* configure.ac: Require libgda-4.0 >= 3.1.3 (this is master)

2009-09-29  Johannes Schmid  <jschmid@openismus.com>

	* libgda/libgdamm/value.cc: Fix set(const gchar*) to call
	g_value_reinit()
	* libgda/src/sqlbuilder.hg/ccg: Add overload for select_add_target() to
	be able to skip the alias (NULL in C)

	* examples/sqlbuilder/main.cc:
	* examples/Makefile.am:
	Add example for the SqlBuilder usage based on the libgda example

2009-09-28  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/sqlbuilder.hg: Use Value instead of Value& to make the
	SqlBuilder::param() much more convenient to use.
	* libgda/libgdamm.h: Add sqlbuilder.h

2009-09-25  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/sqlbuilder.hg:
	* libgda/src/sqlbuilder.ccg:
	Wrapped gda_sql_builder_expr(_value) after it was fixed in libgda

	* libgda/src/libgda_methods.defs:
	Regenerated to have the new method

	* tools/m4/convert_libgdamm.m4:
	Added Value conversion (can hopefully be removed once libgda fixes the
	constness of the argument)

2009-09-24  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/filelist.am:
	Added sqlbuilder.hg/ccg

	* libgda/src/sqlbuilder.hg:
	* libgda/src/sqlbuilder.ccg:
	Wrapped GdaSqlBuilder class

	* tools/m4/convert_libgdamm.m4:
	Added two new enums for GdaSqlBuilder

2009-09-24  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/libgda_enums.defs:
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs:
	Regenerated .defs files from libgda master (4.1.x version)

	* tools/extra_defs_gen/generate_defs_gda.cc:
	Added GdaSqlBuilder to the known objects

3.99.18:

2009-09-14  Daniel Elstner  <danielk@openismus.com>

	Enable verbose output of autoreconf

	* autogen.sh: Pass the --verbose option to autoreconf.

2009-09-14  Daniel Elstner  <danielk@openismus.com>

	Update Doxygen configuration for Doxygen 1.6.1

	* docs/reference/Doxyfile.in: Update configuration file for
	Doxygen 1.6.1.
	(EXCLUDE_SYMBOLS): Remove "sigc" again from the list of excluded
	symbols.  With a recent build of libsigc++, this should no longer
	be necessary.
	(SORT_MEMBERS_CTORS_1ST): Set option to YES.

2009-09-04  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/metastruct.hg: Added the MetaStructError exception.

2009-08-31  Daniel Elstner  <danielk@openismus.com>

	Make Doxygen ignore namespace sigc

	* docs/reference/Doxyfile.in (EXCLUDE_SYMBOLS): Add "sigc" to the
	list of symbols to ignore.

3.99.17.1:

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Fix documentation location in pkg-config files

	* libgdamm/libgdamm{,-uninstalled}.pc.in (htmlrefpub): Point to
	library.gnome.org.

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Bump version to 3.99.17.1 and update news

	* configure.ac (AC_INIT): Increment version to libgdamm 3.99.17.1.
	(MM_PREREQ): Require mm-common 0.7.1.
	(AM_INIT_AUTOMAKE): Use check-news option.
	* NEWS: Write news entry for the libgdamm 3.99.17.1 release.

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Use mm-common CSS and drop HTML header/footer

	* docs/reference/Doxyfile.in (HTML_HEADER), (HTML_HEADER): Assign
	the empty string.
	(HTML_STYLESHEET): Assign location of the mm-common style sheet.
	(SORT_GROUP_NAMES): Enable for consistency.
	(PROJECT_NUMBER): Substitute @PACKAGE_VERSION@ instead of the API
	version.  It does look nicer and is probably more helpful.
	* docs/Makefile.am (htmlrefpub): Remove variable override, now
	that the documentation is hosted on library.gnome.org.
	(dist_noinst_DATA): Remove HTML header and footer fragments.

2009-08-27  Murray Cumming  <murrayc@murrayc-desktop>

	* docs/reference/Doxyfile.in: Set COLLABORATION_GRAPH back to YES,
	so we get hierarchy diagrams again.

2009-08-27  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg: Removed stupid retval=1 debug output.

3.99.17:

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Rename @since back to @newin

	* docs/reference/Doxyfile.in (ALIASES): Rename the @since alias
	back to its old name @newin, but otherwise keep the parameters.
	Apparently there is a @since command predefined in Doxygen which
	I hadn't noticed.  It does seem to get overridden silently, but
	it is better not to rely on this.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Distribute examples/README.txt

	* examples/Makefile.am (dist_noinst_DATA): List README.txt.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Fix build with fatal warnings enabled

	* configure.ac (LIBGDAMM_WXXFLAGS): Pass the option
	-Wno-missing-field-initializers at warning level max and above,
	in order to get the GValue initializations to pass.
	* libgda/src/statement.ccg (Statement::to_sql): Remove name of
	unused 'params_used' parameter.  Extend the FIXME comment to say
	that it cannot be fixed since the wrapper prototype is broken.
	* libgda/src/sqlparser.hg: Remove the #pragma GCC system_header
	directive, which had apparently been put here for the insane
	reason to suppress a warning about /* occurring in a /* ... */
	comment.  Instead, avoid the problem by inserting dummy Doxygen
	commands.
	* libgda/libgdamm/value.cc (Value::Value): Explicitly call the
	inherited Glib::ValueBase default constructor to avoid a warning.
	However, the entire thing is conceptually broken beyond belief
	anyway.
	* examples/{config,simple}/main.cc (main): Remove names of unused
	parameters.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Clean up libgdammconfig.h.in template

	* libgda/libgdammconfig.h.in: Copy #undef statements including
	comments from the generated build/config.h header file.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Make libgda-bdb conditional compilation work

	* configure.ac (HAVE_LIBGDA_BDB): Rename preprocessor define from
	HAVE_BDB to a more recognizable name.
	* tools/extra_defs_gen/generate_defs_gda.cc: Include build/config.h
	configuration header for the HAVE_LIBGDA_BDB macro definition.
	(main): Change to the new macro name.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Build examples non-recursively

	* examples/Makefile.am: Rewrite based on non-recursive make, and
	have all example programs built from here.
	* examples/Makefile.am_fragment: Remove obsolete build file.
	* examples/*/Makefile.am: ditto.
	* configure.ac (AC_CONFIG_FILES): Remove examples/*/Makefile from
	the list of output files.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Overhaul pkg-config metadata files

	* libgda/libgdamm.pc.in: Rename file from libgda/libgdamm-4.0.pc.in.
	Rewrite to make use of more substitutions.  Provide the location of
	the reference documentation as well as the Doxygen tag file.
	* libgda/libgdamm-uninstalled.pc.in: New file for uninstalled use.
	* configure.ac (AC_CONFIG_FILES): Remove API version from input
	filenames and substitute ${LIBGDAMM_MODULE_NAME} into the output
	filenames.  List new input file libgda/libgdamm-uninstalled.pc.in.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Transition to mm-common documentation build

	* configure.ac (AC_CONFIG_FILES): Remove docs/reference/Makefile.am
	from the list of output files.
	(MM_ARG_WITH_TAGFILE_DOC): Reference the Doxygen tag files of
	libstdc++, libsigc++ and glibmm.
	(HAVE_BDB): Remove Automake conditional as it doesn't seem to be
	used.
	* Makefile.am (SUBDIRS): Recurse into docs/ conditionally.
	* docs/Makefile.am: Rewrite based upon the new mm-common build
	infrastructure for the reference documentation.
	* docs/reference/Doxyfile.in: Heavily modernize and adapt to the
	new documentation build organization.
	* docs/reference/glibmm_doxygen_tags: Delete redundant file.
	* docs/reference/Makefile.am: Delete obsolete build file.
	* docs/reference/README: ditto.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Convert tools/ and libgda/ to new infrastructure

	* Makefile.am (SUBDIRS): Skip the libgda/ subdirectory and recurse
	directly into libgda/src/ and libgda/libgdamm/.
	(EXTRA_DIST): Remove the old build_shared/ include files.
	* configure.ac (AC_CONFIG_FILES): Remove files libgda/Makefile.am,
	libgda/libgdamm/private/Makefile.am, tools/m4/Makefile.am and
	tools/extra_defs_gen/Makefile.am from the list of output files.
	(GTHREAD_CFLAGS): Remove substitution again, as libgda-4.0 itself
	already pulls in gthread-2.0.
	* libgda/src/filelist.am: Rename Makefile_list_of_hg.am_fragment
	and adapt to new mm-common Automake include files.
	* libgda/libgdamm/filelist.am: New file, defining the list of
	source code files to compile.
	* libgda/libgdamm/private/Makefile.am: Delete obsolete file.
	* libgda/src/Makefile.am: Rewrite to use new mm-common build
	infrastructure.
	* libgda/libgdamm/Makefile.am: ditto,
	* tools/Makefile.am: ditto.
	* tools/m4/filelist.am: Rename Makefile_list_of_sources.am_fragment
	and adapt to new mm-common Automake include files.
	* tools/m4/Makefile.am: Delete obsolete file.
	* tools/extra_defs_gen/Makefile.am: ditto.
	* build_shared/*.am_fragment: Delete obsolete build support files.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Begin transition to mm-common build system

	* autogen.sh: Replace with minimal version using mm-common-prepare
	and autoreconf.
	* configure.ac: Rename file from configure.in.  Remove a lot of old
	cruft and clean up the remaining bits.  Make use of mm-common macros.
	Insert temporary dummy conditionals to keep the module buildable.
	* Makefile.am (ACLOCAL_AMFLAGS): Set to help autoreconf do its work.
	(SUBDIRS): Remove scripts/ subdirectory.
	(DIST_SUBDIRS): Remove.
	* scripts/Makefile.am: Delete obsolete build file.
	* scripts/macros.m4: Delete obsolete Autoconf macro file.
	* build/: New directory for auxiliary build files.

2009-07-30  Johannes Schmid <jschmid@openismus.com>

	* libgda/src/set.hg: Fix add_holder() template to work with
	disabled exceptions

2009-07-25  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg: update_meta_store_table():
	Use gda_meta_store_sql_identifier_quote() as mentioned in bug #589607.
	Hopefully this is the end of this story.

2009-07-24  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg: update_meta_store_table(): Comment out the
	use of gda_sql_identifier_quote() because we now have the
	CONNECTION_OPTIONS_SQL_IDENTIFIERS_CASE_SENSITIVE connection option
	instead.

2009-07-23  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_enums.defs: Regenerated with h2defs.py, against
	libgda 4.0.

2009-07-20  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg: update_meta_store_table(): Use the
	(even more horrible) gda_sql_identifier_quote() function instead of
	gda_sql_identifier_add_quotes(), because that is now what the documentation
	says we should use.

2009-07-07  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs: Regenerated with h2defs.py.

2009-07-06  Murray Cumming  <murrayc@murrayc.com>

	Added MetaStoreError.

	* libgda/src/libgda_enums.defs: Regenerated with enums.pl
	* libgda/src/metastore.[hg|ccg]: Wrapper GdaMetaStoreError which is
	now thrown by something - not sure what yet.

2009-06-30  Murray Cumming  <murrayc@murrayc.com>

	Fix per-table meta-store retrieval for table names with capital letters.

	* libgda/src/connection.ccg: update_meta_store_table():
	Quote the table name so it works with capital letters, spaces, etc.
	Vivien Malerba stated on the mailing list that this is necessary.
	I am not convinced that this function works at all anyway though.

3.99.16:

2009-06-29  Johannes Schmid  <jschmid@openismus.com>

	* NEWS
	* configure.in:
	Updated for 3.99.16 release

	* examples/simple/main.cc: Fixed typo

2009-06-29  Johannes Schmid  <jschmid@openismus.com>

	* examples/simple/main.cc:
	Fixed build without exceptions

2009-06-22  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	* libgda/src/holder.hg:
	* libgda/src/metastore.ccg:
	* libgda/src/set.hg:
	* libgda/src/set.ccg:
	Fixed builds problems on maemo due to --fno-exceptions and
	GLIBMM_EXCEPTIONS_ENABLED

2009-06-02  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/connection.hg: Improved the documentation for the
	schema_name parameter for update_meta_store_table().

3.99.15:

2009-05-20  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/connection.hg:
	* libgda/src/connection.ccg: Added a schema_name parameter for
	update_meta_store_table_names() and update_meta_store_table().

2009-05-18  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/dataproxy.ccg: get_values(): Actually return the result,
	fixing a compiler warning. Bug #582997 (Vincent Untz).

3.99.14:

2009-03-13  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.[hg|ccg]: Added update_meta_store_data_types() and
	update_meta_store_table_names().

2009-03-13  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm.h: Remove the include of libgdamm/error.h.

2009-03-13  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/error.ccg:
	* libgda/src/error.hg: Removed these because the corresponding C header is
	now not installed by libgda. This is better anyway.
	* libgda/src/libgda_signals.defs: Hand-corrected mentions of GdaError to
	GError.
	* tools/m4/convert_libgdamm.m4: Move signal-specific Value and Error
	conversions out of here.

	* libgda/src/dataproxy.hg:
	* libgda/src/holder.hg:
	* libgda/src/set.hg: Use Glib::Error instead of Gda::Error.
	Make Value and ustring string parameters const references.

3.99.13:

2009-03-10  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/metastore.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/set.hg:
	* libgda/src/statement.hg: Added TODO comments about bugs that I filed
	about unclear libgda API.

2009-03-02  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/xatransaction.hg: Changed type of "format-id" property
	from uint to guint, to fix the build on Windows.

3.99.12:

2009-02-23  David King  <davidk@openismus.com>

	* configure.in: Fix broken logic for location of gmmproc binary.

2009-02-22  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodelarray.hg:
	* libgda/src/metastore.hg: Removed extra ;s to avoid warnings.

3.99.11:

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs: Regenerated.

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datahandler.hg:
	* libgda/src/datamodel.hg: DataHandlerClass and DataModelClass were
	renamed to DataHandlerIface and DataModelIface in libgda. Adapted to
	fix the build.

2009-01-30  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/libgda_methods.defs: Regenerated.
	* libgda/src/datahandler.hg: Removed get_nb_g_types() and
	get_g_type_index() because the C functions were removed from libgda.

2009-01-27  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/set.[hg|ccg]: Rename add_holder(string, value) to
	add_holder_as_value(). Added a templated add_holder(string, T), to
	make application code less annoying.

2009-01-27  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/serverprovider.[hg|ccg]: Add a create_operation() overload
	that takes no parameters.

2009-01-27  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/holder.hg (set_value):
	Don't call set_value() recursively

2009-01-24  Deng Xiyue  <manphiz@gmail.com>

	* Change license header to mention Lesser General Public License
	version 2.1 instead of Library General Public License, to be
	consistent with COPYING.

2009-01-26  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/holder.hg: set_value(): Renamed to set_value_as_value().
	Added a templated set_value() method, to simplify application code.

2009-01-26  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/set.ccg:
	* libgda/src/set.hg:
	Added add_holder(id, value) as convenience shortcut

2009-01-24  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/holder.hg: copy(): Make this const.
	get_bind(): Use refreturn and add a const overload.

2009-01-22  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/statement.ccg:
	* libgda/src/statement.hg: Rename to_sql_extended() to to_sql().
	Use Glib::convert_return_gchar_ptr_to_ustring() instead of leaking the
	string. Added an overload with no arguments. Made them all const.

2009-01-22  Johannes Schmid <jschmid@openismus.com>

	* libgda/src/set.hg(get_holder):
	* libgda/src/statement.ccg (get_parameters()):
	Fixed more reference problems

2009-01-21  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	Created version with last_inserted_row of statement_execute_non_select()

	* libgda/src/statement.ccg:
	Take a copy of the GdaSet in get_parameters() because we get a reference
	problem otherwise

2009-01-21  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/holder.ccg:
	* libgda/src/holder.hg:
	* libgda/src/statement.hg:

	Wrapped GdaHolderError and GdaStatementError

2009-01-20  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/libgda_enums.defs:
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs:
	Regenerated

	* libgda/src/sqlparser.hg:
	* tools/m4/convert_libgdamm.m4:
	Wrap GdaSqlParserError

3.99.8:

2009-01-16  Murray Cumming  <murrayc@murrayc.com>

	* libgda/libgdamm.h:
	* libgda/src/Makefile_list_of_hg.am_fragment:
	* tools/extra_defs_gen/generate_defs_gda.cc:
	* libgda/src/threader.[hg|ccg]: Removed Threader because GdaThreader
	was removed from libgda.

2009-01-14  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/connection.ccg (update_meta_store_table): Don't leak the
	GValue or other dynamically allocated resources.

2009-01-09  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	Fix update_meta_store_table()

2009-01-08  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/connection.hg: Take an additional reference in
	get_provider(), so we don't free a reference we don't own.

3.99.7:

2009-01-04  Johannes Schmid <jschmid@openismus.com>

	* libgda/src/column.hg: Added a _IGNORE for set_attribute()
	* configure.in: Bumped version to 3.99.7 (synced with libgda)
	* NEWS: Updated

2009-01-04  Johannes Schmid <jschmid@openismus.com>

	* libgda/src/dataselect.ccg:
	* libgda/src/dataselect.hg:
	* libgda/src/holder.hg:
	* libgda/src/metastore.ccg:
	* libgda/src/metastore.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/row.hg:
	Wrapped various missing methods

2009-01-03  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.hg: open_from_string(): Make the auth_string
	parameter optional because it is not always needed, for instance with
	sqlite.

	* libgda/src/datamodelarray.ccg:
	* libgda/src/datamodelarray.hg: Added set_column_g_type().

	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/holder.ccg: set_attribute():  Specify a callback to
	destroy the provided string, because libgda has stupid memory management
	for that.

2008-12-27  Johannes Schmid <jschmid@openismus.com>

	* libgda/src/libgda_docs.xml:
	Regenerated from latest gda (and slightly edited to fix build)

2008-12-27  Johannes Schmid <jschmid@openismus.com>

	* docs/reference/Doxyfile.in:
	Fixed some doxygen warnings

	* libgda/src/libgda_docs.xml:
	Updated documentation

	* libgda/src/metastore.ccg:
	* libgda/src/quarklist.hg:
	Fixed build

2008-12-25  Johannes Schmid <jschmid@openismus.com>

	* examples/simple/main.cc:
	Added some meta store example though I am not quite sure yet what information
	would be a good example here

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	* libgda/src/metastore.ccg:
	* libgda/src/metastore.hg:
	Added several methods to update specific meta store informations and fixed
	a refreturn

2008-12-21  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	* libgda/src/libgda_methods.defs:
	Regenerated devs and fixed build

	* libgda/src/datamodel.hg:
	* libgda/src/datamodeliter.hg:
	Revert last change - it was wrong

2008-12-21  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	Added some more detailed update_meta_store() methods that speed up the update
	when only a part of the information is needed.

	* libgda/src/datamodel.hg:
	* libgda/src/datamodeliter.hg:
	Fixed build with latest libgda

2008-12-18  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.hg: Include serverprovider.h, because
	the *execute* methods may throw ServerProviderError, though that is not
	documented. See bug #565019.
	* libgda/src/serverprovider.[hg|ccg]: Do not include connection.h,
	because that would be circular.

2008-12-18  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/serverprovider.hg: Wrap the GdaServerProviderError
	GError/Exception.

2008-12-17  Yaakov Selkowitz  <yselkowitz@users.sourceforge.net>

	* libgda/libgdamm/private/Makefile.am: (private_includedir):
	  Change version to 4.0.
	* tools/m4/Makefile.am (tools_m4_includedir): Ditto.
	Bug #564816

2008-12-17  Armin Burgmeier  <armin@openismus.com>

	* libgda/src/holder.ccg: Removed an extra 's' character that made the
	build fail. This has probably been committed accidentally.

	* libgda/src/serverprovider.hg: Made all available methods public,
	instead of private, so they can actually be used.

2008-12-17  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.hg:
	* libgda/src/holder.ccg: Use *set_attribute_static() for now jus t
	to fix the build with latest libgda, though the true fix is not yet
	clear.

2008-12-17  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodel.hg:
	* libgda/src/datamodeliter.hg:
	* libgda/src/libgda_docs.xml:
	* libgda/src/libgda_methods.defs: Change move_at to move_to
	as in libgda.

2008-12-15  Murray Cumming  <murrayc@murrayc.com>

	Re-committed this, calling the C function directly to avoid a non-NULL
	col_types parameter:

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: statement_execute_select(): Add a
	StatementModelUsage parameter, with a default value, so we can
	specify a cursor model.
	statement_execute_select_full(): Rename to statement_execute_select().

2008-12-15  Johannes Schmid  <jschmid@openismus.com>

	* configure.in:
	* examples/Makefile.am:
	* examples/config/Makefile.am:
	* examples/config/main.cc:
	Added a tiny example to list the available providers

	* libgda/src/connection.ccg:
	Some leftover from previous changes...

2008-12-15  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	Use gda_execute_non_select_command() instead of hardcoding

	* libgda/src/serveroperation.ccg:
	* libgda/src/serveroperation.hg:
	Add gda_perform_create/drop_database and gda_prepare_create/drop_database from
	gda-easy

2008-12-15  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: Reverted my last change because it is
	causing weird column-index warnings in Glom. I will try again.

2008-12-14  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg: statement_execute_select(): Add a
	StatementModelUsage parameter, with a default value, so we can
	specify a cursor model.
	statement_execute_select_full(): Rename to statement_execute_select().

2008-12-12  Deng Xiyue <manphiz@gmail.com>

	* libgda/libgdamm/value.h: commented out an unused parameter to
	silence	a warning.  Patch by Norbert Kiesel <nkiesel@tbdnetworks.com>.
	bug #554484.

2008-12-12  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/datamodeliter.hg: Use refreturn on get_holder_for_field(),
	as we should for most get_*() that return a RefPtr. Add a const
	overload too.
	* libgda/src/holder.hg: set_attribute(): Hand-code this so we can
	leak the string, because the (awful, stupid)
	gda_holder_set_attribute() function expects it to be a static string,
	instead of copying it. You haven't heard the last of this,
	gda_holder_set_attribute().

2008-12-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_libgdamm.m4:
	* libgda/src/connection.[hg|ccg]: Added a get_meta_store_data()
	method overload with no filters parameter.

2008-12-07  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	Added helper methods to use sql directly instead of Gda::Statement

2008-12-03  Daniel Elstner  <danielk@openismus.com>

	* libgda/src/connection.ccg (update_meta_store): For now pass 0
	as optional GdaMetaContext argument, in order to fix the build.

2008-11-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/column.hg:
	Make get_default_value() const
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	Added wrapper for update_meta_store(). (It omits the optional GdaMetaStore
	because I think you will most likely never need it)

2008-11-28  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/row.ccg:
	* libgda/src/row.hg:
	Fixed some Value methods that were still using Glib::Value

2008-11-27  Johannes Schmid  <jschmid@openimus.com>

	* libgda/src/holder.ccg:
	Use _CONSTRUCT macro instead of hard-coding everything

2008-11-25  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/holder.ccg:
	* libgda/src/holder.hg:
	Write custom constructor for Gda::Holder because the autgenerated did not work

2008-11-21  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/set.hg:
	Corrected constructor default argument

2008-11-18  Johannes Schmid  <jschmid@openismus.com>

	* examples/simple/main.cc:
	Use more simplified API

	* libgda/src/connection.hg:
	Added default arguments
	* libgda/src/datamodeliter.hg:
	Wrapped missing methods

2008-11-18  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/batch.hg:
	* libgda/src/column.hg:
	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	* libgda/src/set.hg:
	* libgda/src/sqlparser.ccg:
	* libgda/src/sqlparser.hg:
	Added some custom methods and default arguments to honer the fact
	that libgda allows to pass "NULL" for several arguments

	* examples/simple/main.cc:
	Used new methods.

2008-11-17  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/row.ccg:
	* libgda/src/row.hg:
	* libgda/src/serveroperation.ccg:
	* libgda/src/serveroperation.hg:
	* libgda/src/serverprovider.ccg:
	* libgda/src/serverprovider.hg: Use Gnome::Gda::Value instead of
	Glib::ValueBase, as it was in libgdamm-3.0. ValueBase particularly
	cannot be used as a return type.

2008-11-17  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/batch.ccg:
	* libgda/src/batch.hg:
	* libgda/src/blob.hg:
	* libgda/src/column.hg:
	* libgda/src/config.hg:
	* libgda/src/connection.hg:
	* libgda/src/connectionevent.hg:
	* libgda/src/dataaccesswrapper.hg:
	* libgda/src/datacomparator.hg:
	* libgda/src/datamodel.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodelimport.hg:
	* libgda/src/datamodeliter.hg:
	* libgda/src/dataselect.hg:
	* libgda/src/error.hg:
	* libgda/src/holder.hg:
	* libgda/src/metastore.ccg:
	* libgda/src/metastore.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/quarklist.hg:
	* libgda/src/row.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/serverprovider.ccg:
	* libgda/src/serverprovider.hg:
	* libgda/src/set.hg:
	* libgda/src/sqlparser.hg:
	* libgda/src/statement.hg:
	* libgda/src/threader.hg:
	* libgda/src/xatransaction.hg:
	* tools/m4/convert_libgdamm.m4:
	Several const corrections.
	Moved typedefs into classes.
	Moved signal conversions into .hg files and added the extra ref.
	Put fullstop at end of all doxygen first sentences.

2008-11-13  Johannes Schmid  <jhs@gnome.org>

	* libgda/libgdamm.h:
	Add missing files
	* libgda/src/config.ccg:
	* libgda/src/config.hg:
	* libgda/src/connection.hg:
	* libgda/src/metastore.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/set.hg:
	* libgda/src/sqlparser.hg:
	Disabled some methods that cause problems and may not be of any use.
	Fixed some build errors and sileced a warning

3.99.9:

2008-11-11  Johannes Schmid  <jschmid@openismus.com>

	* NEWS: Updated
	* configure.in:
	Require libgda 3.99.7

2008-11-11  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/batch.ccg:
	* libgda/src/batch.hg:
	* libgda/src/column.hg:
	* libgda/src/connection.hg:
	* libgda/src/dataselect.hg:
	* libgda/src/metastore.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/quarklist.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/set.hg:
	* libgda/src/sqlparser.hg:
	* libgda/src/statement.hg:
	* libgda/src/xatransaction.hg:
	Fixed most obvious doxygen warnings

2008-11-10  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/datacomparator.hg:
	* libgda/src/quarklist.hg:
	* libgda/src/sqlparser.hg:
	* libgda/src/statement.hg:
	More documentation fixes

2008-11-05  Johannes Schmid  <jschmid@openismus.com>

	* examples/simple/main.cc:
	Remove debugging code

	* libgda/src/batch.hg:
	* libgda/src/blobop.hg:
	* libgda/src/dataaccesswrapper.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodeliter.hg:
	* libgda/src/dataselect.hg:
	* libgda/src/error.hg:
	* libgda/src/holder.hg:
	* libgda/src/libgda_docs.xml:
	* libgda/src/metastore.hg:
	* libgda/src/metastruct.hg:
	* libgda/src/row.hg:
	* libgda/src/serveroperation.hg:
	* libgda/src/serverprovider.hg:
	* libgda/src/set.hg:
	* libgda/src/sqlparser.hg:
	* libgda/src/statement.hg:
	* libgda/src/threader.hg:
	* libgda/src/xatransaction.hg:
	Added class documentation (and regenerated docs). Still needs some cleanup.

2008-11-05  Murray Cumming  <murrayc@murrayc.com>

	* libgda/src/dataaccesswrapper.hg:
	* libgda/src/datacomparator.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodelimport.hg:
	* libgda/src/dataselect.hg: Derive from DataModel and
	use _IMPLEMENTS_INTERFACE() so that dynamic_cast<> works
	when using wrap() on one of these C types.

2008-11-04  Johannes Schmid  <jschmid@openismus.com>

	* examples/simple/main.cc:
	Added some debug code

2008-11-01  Johannes Schmid  <jschmid@openismus.com>

	* libgda/libgdamm/Makefile.am:
	* libgda/libgdamm/value_tools.h (deleted):
	* libgda/libgdamm/value.h (added):
	* libgda/libgdamm/value.cc (added):
	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/connection.hg:
	* libgda/src/datahandler.ccg:
	* libgda/src/datahandler.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/datamodeliter.ccg:
	* libgda/src/datamodeliter.hg:
	* libgda/src/holder.ccg:
	* libgda/src/holder.hg:
	* libgda/src/libgda_signals.defs:
	* libgda/src/set.ccg:
	* libgda/src/set.hg:
	* libgda/src/xatransaction.ccg:
	* libgda/src/xatransaction.hg:
	* tools/extra_defs_gen/generate_defs_gda.cc:
	* tools/m4/convert_libgdamm.m4:

	Readded GdaValue and converted classes to use it

2008-10-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/libgda_signals.defs:
	* libgda/src/xatransaction.ccg:
	* libgda/src/xatransaction.hg:
	* tools/extra_defs_gen/generate_defs_gda.cc:
	Wrapped GdaXaTransaction

2008-10-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/dataselect.ccg:
	* libgda/src/dataselect.hg:
	Wrapped GdaDataSelect

2008-10-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/error.hg:
	Don't put typedef in generated file but in hg instead...

	* libgda/src/libgda_signals.defs:
	* tools/extra_defs_gen/generate_defs_gda.cc:
	Regenerated signals/properties

2008-10-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/dataaccesswrapper.ccg:
	* libgda/src/dataaccesswrapper.hg:

	Wrapped GdaDataAccessWrapper

2008-10-30  Johannes Schmid  <jschmid@openismus.com>

	* libgda/libgdamm/value_tools.h:
	* libgda/src/libgda_methods.defs:
	* libgda/src/serverprovider.hg:
	* tools/m4/convert_libgdamm.m4:

	Fixed build with latest libgda

2008-10-19  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/datacomparator.ccg:
	* libgda/src/datacomparator.hg:
	* tools/m4/convert_libgdamm.m4:

	Wrapped GdaDataComparator

2008-10-16  Johannes Schmid  <jschmid@openismus.com>

	* libgda/libgdamm/Makefile.am:
	* libgda/libgdamm/value_tools.h:
	Added some inline methods for GValue conversions

	* libgda/src/Makefile_list_of_hg.am_fragment:
	* libgda/src/error.*
	Wrapped GdaError boxed type

	* libgda/src/dataproxy.hg:
	* libgda/src/set.hg:
	* libgda/src/holder.hg
	Fixed some signals

	* libgda/src/libgda_signals.defs:
	Edited by hand to fix some wrongly detected signals

	* tools/m4/convert_libgdamm.m4:
	Added some new conversions for GError and GdaError

2008-10-11  Johannes Schmid  <jschmid@openismus.com>

	* configure.in: Require libgda 3.99.6
	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	Wrapped set/get_attribte()

	* libgda/src/connection.ccg:
	* libgda/src/connection.hg:
	Wrapped statement_to_sql() and get_meta_store_data()

	* libgda/src/datamodel.hg:
	Removed non-existing property
	* libgda/src/holder.ccg:
	* libgda/src/holder.hg:
	Wrapped set/get_attribte()

	* libgda/src/quarklist.ccg:
	* libgda/src/quarklist.hg:
	Wrapped foreach()

	* libgda/src/libgda_enums.defs:
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_others.defs:
	* libgda/src/libgda_signals.defs:
	Regenerated for new API version

	* libgda/src/statement.hg:
	Removed gda_statement_deserialize() (no longer in libgda)

	* tools/m4/convert_libgdamm.m4:
	Added some new conversions

2008-10-08  Johannes Schmid  <jschmid@openismus.com>

	* configure.in:
	* tools/extra_defs_gen/generate_defs_gda.cc:
	Fix build when libgda-bdb-4.0 is not installed

2008-10-07  Johannes Schmid  <jschmid@openismus.com>

	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/holder.ccg:
	* libgda/src/holder.hg:
	* libgda/src/libgda_methods.defs:
	* libgda/src/libgda_signals.defs:
	* libgda/src/set.hg:
	Fixed build due to several API changes in libgda

2008-10-07  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Added [] around LIBGDAMM_VERSION with AC_SUBST
	to avoid an odd error.

2008-10-01  Johannes Schmid  <johannes.schmid@openismus.com>

	* libgda/src/column.hg:
	* libgda/src/connection.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/dataproxy.hg:
	* libgda/src/holder.ccg:
	* libgda/src/holder.hg:
	* libgda/src/libgda_signals.defs:
	* libgda/src/metastruct.hg:
	* libgda/src/set.hg:
	Wrapped more missing methods and signals

2008-10-01  Johannes Schmid  <johannes.schmid@openismus.com>

	* libgda/libgdamm.h:
	* libgda/src/column.ccg:
	* libgda/src/column.hg:
	* libgda/src/config.ccg:
	* libgda/src/config.hg:
	* libgda/src/datamodel.ccg:
	* libgda/src/datamodel.hg:
	* libgda/src/datamodelarray.hg:
	* libgda/src/datamodelimport.hg:
	* libgda/src/dataproxy.hg:
	Fixed build with latest libgda-4.0

2008-09-30  Johannes Schmid  <johannes.schmid@openismus.com>

	* tools/extra_defs_gen/extra_defs_gda.cc: Fixed build
	* libgda/src/*.defs: Regenerated defs files from latest libgda-4.0
	* libgda/src/*.hg: Adapted most files to changes in libgda
